{"version":3,"sources":["components/Header.js","api/api.js","actions/strongDishActions.js","constants/strongDishTypes.js","actions/ingredientByDishActions.js","constants/ingredientToDishTypes.js","actions/modalActions.js","constants/modalTypes.js","helper/modal.helper.js","helper/randomString.helper.js","components/add/AddStrongDish.js","actions/entreeActions.js","constants/entreeTypes.js","components/add/AddEntree.js","actions/ingredientActions.js","constants/ingredientTypes.js","components/add/AddIngredient.js","actions/dessertActions.js","constants/dessertTypes.js","components/add/AddDessert.js","actions/drinkActions.js","constants/drinkTypes.js","components/add/AddDrink.js","components/view/strongDish.js","containers/show/ShowStrongsDishes.js","components/view/ingredient.js","containers/show/ShowIngredients.js","components/view/entree.js","containers/show/ShowEntrees.js","components/view/dessert.js","containers/show/ShowDesserts.js","components/view/drink.js","containers/show/ShowDrinks.js","actions/invoiceActions.js","constants/invoiceTypes.js","components/view/invoice.js","containers/show/ShowInvoices.js","actions/userActions.js","constants/userTypes.js","components/view/user.js","containers/show/ShowUsers.js","components/edit/EditStrongDish.js","components/edit/EditIngredient.js","components/edit/EditEntree.js","components/edit/EditDessert.js","components/edit/EditDrink.js","history.js","components/edit/EditInvoice.js","components/add/AddIngredientToDish.js","components/delete/delete.js","components/Modal.js","components/edit/EditUser.js","components/add/AddUser.js","components/App.js","serviceWorker.js","reducers/ingredientsReducer.js","reducers/strongsDishesReducer.js","reducers/entreesReducer.js","reducers/dessertsReducer.js","reducers/drinksReducer.js","reducers/invoicesReducer.js","reducers/modalsReducer.js","reducers/ingredientByDishReducer.js","reducers/usersReducer.js","reducers/index.js","store.js","index.js"],"names":["toggleSubmenu","e","currentTarget","classList","toggle","Header","className","type","data-toggle","data-target","style","maxWidth","float","onClick","to","role","href","color","width","position","lineHeight","axios","create","baseURL","responseType","httpsAgent","https","Agent","rejectUnauthorized","getStrongsDishes","dispatch","a","api","get","then","res","payload","data","clearIngredientsByDish","getIngredientsByDishId","id","catch","err","console","log","deleteIngredientDish","idIngredientDish","delete","setAddIngredient","setDelete","idToDelete","productType","length","index","id_ingredient","id_ingredient_dish","resp","setDishId","idDish","setNextIdDishIngredient","nextIdDishIngredient","closeModal","preventDefault","$","css","toggleClass","openModal","randomString","result","characters","charactersLength","i","charAt","Math","floor","random","AddStrongDish","props","onAddIngredient","setTimeout","onChange","setState","target","name","value","pictureDish","files","undefined","picture","pictureName","addNewStrongDish","state","description","price","category","formData","FormData","_this","error","append","addStrongDish","ingredientsByDish","forEach","ing","post","history","push","Fragment","map","src","img","alt","margin","maxHeight","componentDidMount","totalOfItems","idString","customRandomString","response","maxIngredientDishId","nextIdIngDish","parseInt","this","onSubmit","defaultValue","display","placeholder","nextProps","prevState","React","PureComponent","connect","strongsDishes","modals","strongDish","headers","getEntrees","AddEntree","addNewEntree","addEntree","data-testid","entrees","entree","getIngredients","AddIngredient","imgIngredient","addNewIngredient","addIngredient","ingredients","ingredient","getDesserts","AddDessert","pictureDessert","addNewDessert","addDessert","desserts","dessert","getDrinks","AddDrink","pictureDrink","addNewDrink","addDrink","drinks","drink","memo","info","deleteMainCourse","ShowStrongsDishes","renderStrongsDishes","strongsDishesToShow","key","getNextPage","currentPage","totalPagination","hasClass","removeClass","tempCurrentPage","tempFirstItemToShow","maxItemsPerPage","firstItemToShow","getPrevPage","getPage","addClass","setStrongDishesItems","tempStrongsDishesToShow","maxItemsLenght","getPagination","textAlign","totalItems","tempTotalPages","ceil","tempItems","match","params","page","isNaN","document","querySelector","add","Component","withRouter","deleteIngredient","ShowIngredients","renderIngredients","ingredientsToShow","setIngredientsItems","tempIngredientsToShow","deleteEntree","ShowEntrees","renderEntrees","entreesToShow","setEntreesItems","tempEntreesToShow","deleteDessert","ShowDesserts","renderDesserts","dessertsToShow","setDessertsItems","tempDessertsToShow","deleteDrink","ShowDrinks","renderDrinks","drinksToShow","setDrinksItems","tempDrinksToShow","getInvoices","id_header","date_of_billing","username","email","order_code","date","replace","padding","minWidth","background","ShowInvoices","renderInvoices","invoicesToShow","headerInvoice","orderCode","setInvoicesItems","invoices","tempInvoicesToShow","bind","getUsers","users","deleteUser","ShowUsers","renderUsers","usersToShow","user","setUsersItems","tempUsersToShow","EditStrongDish","showStrongDish","isLoadig","changedPicture","editStrongDish","infoDish","updateStrongDish","saveIngredients","getIngredientsByDish","encType","put","EditIngredient","editIngredient","infoIngredient","updateIngredient","showIngredient","nextState","readOnly","EditEntree","showEntree","pictureEntree","editEntree","infoEntree","updateEntree","EditDessert","showDessert","editDessert","infoDessert","updateDessert","EditDrink","editDrink","infoDrink","updateDrink","showDrink","readonly","createBrowserHistory","EditInvoice","showInvoice","showOrderProducts","renderOrder","totalPrice","orderProducts","product","parseFloat","total","order","product_name","product_quantity","colSpan","goBack","invoice","dateOfBilling","htmlFor","AddIngredientToDish","ingredientsToAdd","ingredientSelected","dishSelected","onChangeIngredient","idIngredient","tempIngredientSelected","id_dish","selectDish","updateIngredientToDish","addIngredientToDishFromModal","item","form","deleteStrongDish","dontDelete","window","location","reload","deleteProduct","ModalContent","titleModal","tabIndex","data-dismiss","aria-label","aria-hidden","EditUser","showUser","editUser","firstname","lastname","about","password","retypePassword","infoUser","errorMessage","AddUser","idUser","MaxIdUser","submitAddUser","addUser","exact","path","render","component","Boolean","hostname","initialState","combineReducers","action","filter","strongsDish","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cb674c3.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst toggleSubmenu=(e)=>{\n    if(e){\n        e.currentTarget.classList.toggle(\"open\");\n    }\n}\n\nconst Header=()=>{\n    return(\n        <nav className=\"navbar navbar-inverse\">\n            <div className=\"container-fluid\">\n                <div className=\"navbar-header\">\n                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\n                    <span className=\"icon-bar\"></span>\n                    <span className=\"icon-bar\"></span>\n                    <span className=\"icon-bar\"></span>\n                </button>\n                </div>\n                <div className=\"collapse navbar-collapse\" style={{maxWidth: '800px',float: 'left'}}>\n                    <ul className=\"nav navbar-nav\">\n                        <li className=\"dropdown\" onClick={(e)=>toggleSubmenu(e)}>\n                            <Link to=\"/admin/main-courses\" className=\"dropdown-toggle menu-main-item\">Main Courses<span className=\"caret\"></span>\n                            </Link>\n                            <ul className=\"dropdown-menu\" role=\"menu\">\n                                <li>\n                                    <Link to=\"/admin/add/main-course\">Add</Link>\n                                </li>\n                            </ul>\n                        </li>\n                        <li className=\"dropdown\" onClick={(e)=>toggleSubmenu(e)}>\n                            <Link to=\"/admin/desserts\" className=\"dropdown-toggle menu-main-item\">Desserts<span className=\"caret\"></span>\n                            </Link>\n                            <ul className=\"dropdown-menu\" role=\"menu\">\n                                <li>\n                                    <Link to=\"/admin/add/dessert\">Add</Link>\n                                </li>\n                            </ul> \n                        </li>\n                        <li className=\"dropdown\" onClick={(e)=>toggleSubmenu(e)}>\n                            <Link to=\"/admin/appetizers\" className=\"dropdown-toggle menu-main-item\">Appetizers<span className=\"caret\"></span>\n                            </Link>\n                            <ul className=\"dropdown-menu\" role=\"menu\">\n                                <li>\n                                    <Link to=\"/admin/add/appetizer\">Add</Link>\n                                </li>\n                            </ul> \n                        </li>\n                        <li className=\"dropdown\" onClick={(e)=>toggleSubmenu(e)}>\n                            <Link to=\"/admin/ingredients\" className=\"dropdown-toggle menu-main-item\">Ingredients<span className=\"caret\"></span>\n                            </Link>\n                            <ul className=\"dropdown-menu\" role=\"menu\">\n                                <li>\n                                    <Link to=\"/admin/add/ingredient\">Add</Link>\n                                </li>\n                            </ul>\n                        </li>\n                        <li className=\"dropdown\" onClick={(e)=>toggleSubmenu(e)}>\n                            <Link to=\"/admin/drinks\" className=\"dropdown-toggle menu-main-item\">Drinks<span className=\"caret\"></span>\n                            </Link>\n                            <ul className=\"dropdown-menu\" role=\"menu\">\n                                <li>\n                                    <Link to=\"/admin/add/drink\">Add</Link>\n                                </li>\n                            </ul>\n                        </li>\n                        <li className=\"dropdown\" onClick={(e)=>toggleSubmenu(e)}>\n                            <Link to=\"/admin/invoices\" className=\"dropdown-toggle menu-main-item\">Invoices</Link> \n                        </li>\n                        <li className=\"dropdown\" onClick={(e)=>toggleSubmenu(e)}>\n                            <Link to=\"/admin/users\" className=\"dropdown-toggle menu-main-item\">Users<span className=\"caret\"></span>\n                            </Link>\n                            <ul className=\"dropdown-menu\" role=\"menu\">\n                                <li>\n                                    <Link to=\"/admin/add/user\">Add</Link>\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n                <a href=\"/logout\" style={{float: 'right',color:' #fff',width:' 200px',position:' relative',lineHeight: 3}}>Logout</a>\n            </div>\n        </nav>\n    )\n} \nexport default Header;","import axios from 'axios';\nimport https from 'https';\nimport {previewMode} from \"../config/previewMode\";\nexport default axios.create({\n    baseURL:'//localhost:49658',\n    responseType: 'json',\n    httpsAgent: new https.Agent({  \n      rejectUnauthorized: false\n    })\n}) \nif(previewMode){\n  https.globalAgent.options.rejectUnauthorized = false;\n} ","import { SHOW_STRONGS_DISHES,DELETE_STRONG_DISH,ADD_STRONG_DISH, SHOW_STRONG_DISH, EDIT_STRONG_DISH} from \"../constants/strongDishTypes\"\nimport api from '../api/api';\nexport  const getStrongsDishes=()=>async dispatch=>{\n    return await api.get('/api/strongs-dishes')\n    .then((res)=>{\n        dispatch({\n            type:SHOW_STRONGS_DISHES,\n            payload:res.data\n        })\n    }) \n}\nexport const deleteStrongDish =id=>async dispatch=>{\n    await api.delete('/api/strongs-dish/delete/'+id);\n    dispatch({\n        type:DELETE_STRONG_DISH,\n        payload:id\n    })\n}\nexport const addStrongDish=strongDish=>async dispatch=>{\n    return await api.post('/api/strong-dish/add/',strongDish,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    })\n    .then((res)=>{\n        dispatch({\n            type:ADD_STRONG_DISH,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in strongDishActions.addStrongDish');\n        console.log(err);\n    }); \n}\nexport const showStrongDish=id=>async dispatch=>{\n    return await api.get('/api/strong-dish/show/'+id)\n    .then((res)=>{\n        dispatch({\n            type:SHOW_STRONG_DISH,\n            payload:res.data\n        })\n    })\n}\nexport const editStrongDish=(strongDish,id)=>async dispatch=>{\n    return await api.put('/api/strong-dish/update/'+id,strongDish)\n    .then((res)=>{ \n        dispatch({\n            type:EDIT_STRONG_DISH,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in strongDishActions.editStrongDish');\n        console.log(err);\n    });\n    \n}\nexport const updateStrongDish=(strongDish,id)=>async dispatch=>{\n    return await api.put('/api/strong-dish/update-img/'+id,strongDish,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    })\n    .then((res)=>{ \n        dispatch({\n            type:EDIT_STRONG_DISH,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in strongDishActions.updateStrongDish');\n        console.log(err);\n    });\n}","export const ADD_STRONG_DISH='ADD_STRONG_DISH';\nexport const SHOW_STRONGS_DISHES='SHOW_STRONGS_DISHES';\nexport const SHOW_STRONG_DISH='SHOW_STRONG_DISH';\nexport const EDIT_STRONG_DISH='EDIT_STRONG_DISH';\nexport const DELETE_STRONG_DISH='DELETE_STRONG_DISH';","import { GET_INGREDIENTS_BY_DISH_ID,ADD_INGREDIENT_TO_DISH,UPDATE_INGREDIENT_TO_DISH,\n    DELETE_INGREDIENT_TO_DISH,CLEAR_INGREDIENTS_BY_DISH} from \"../constants/ingredientToDishTypes\";\nimport api from '../api/api';\n\nexport const clearIngredientsByDish = () => ({ type: CLEAR_INGREDIENTS_BY_DISH })\nexport const getIngredientsByDishId=(id)=>async dispatch=>{\n        return await api.get('/api/ingredients/'+id)\n        .then((res)=>{\n            dispatch({\n                type:GET_INGREDIENTS_BY_DISH_ID,\n                payload:res.data\n            })\n        })\n        .catch((err)=>{\n            console.log('An error occurs in ingredientsByDishActions.getIngredientsByDishId');\n            console.log(err);\n        })\n}\nexport const addIngredientToDishFromModal=(ingredient)=>{\n    return{\n        type:ADD_INGREDIENT_TO_DISH,\n        payload:ingredient\n    };\n}\nexport const updateIngredientToDish=(ingredient)=>{\n    return{\n        type:UPDATE_INGREDIENT_TO_DISH,\n        payload:ingredient\n    };\n}\nexport const deleteIngredientDish=(idIngredientDish)=>async dispatch=>{\n    await api.delete('/api/ingredient-to-dish/delete/'+idIngredientDish)\n    .then((res)=>{ \n        return res;\n    })\n    .catch((err)=>{\n        console.log('An error occurs in deleteIngredientDish()');\n        console.log(err);\n    });\n    dispatch({\n        type:DELETE_INGREDIENT_TO_DISH,\n        payload:idIngredientDish\n    })\n}\n","export const GET_INGREDIENTS_BY_DISH_ID='GET_INGREDIENTS_BY_DISH_ID';\nexport const ADD_INGREDIENT_TO_DISH='ADD_INGREDIENT_TO_DISH';\nexport const DELETE_INGREDIENT_TO_DISH='DELETE_INGREDIENT_TO_DISH';\nexport const UPDATE_INGREDIENT_TO_DISH='UPDATE_INGREDIENT_TO_DISH';\nexport const CLEAR_INGREDIENTS_BY_DISH='CLEAR_INGREDIENTS_BY_DISH';","import {SET_ADD_INGREDIENT,SET_DISH_ID, SET_DISH_INGREDIENT_ID,SET_DELETE_PRODUCT} from '../constants/modalTypes';\nimport api from '../api/api';\nexport const setAddIngredient = () => ({ type: SET_ADD_INGREDIENT })\nexport const setDelete=(idToDelete,productType)=>async dispatch=>{\n    if(productType==='Main Course'||productType==='Appetizer'||productType==='Dessert'){\n        await api.get('/api/ingredients/'+idToDelete)\n        .then(async(res)=>{\n            if(res.data.length>0){\n                for (let index = 0; index < res.data.length; index++) {\n                    if(res.data[index].id_ingredient){\n                        console.log('Deleting id_ingredient_dish: '+res.data[index].id_ingredient_dish);\n                        await api.delete('/api/ingredient-to-dish/delete/'+res.data[index].id_ingredient_dish)\n                        .then((resp)=>{\n                            console.log(resp);\n                        })\n                    }\n                }\n            } \n        })\n    }\n    dispatch({\n        type:SET_DELETE_PRODUCT,\n        idToDelete:idToDelete,\n        productType:productType\n    })\n    \n} \nexport const setDishId = idDish => ({ \n    type: SET_DISH_ID, \n    idDish \n})\nexport const setNextIdDishIngredient=(nextIdDishIngredient)=>({\n    type:SET_DISH_INGREDIENT_ID,\n    nextIdDishIngredient\n})","export const SET_ADD_INGREDIENT='SET_ADD_INGREDIENT';\nexport const SET_DISH_ID='SET_DISH_ID';\nexport const SET_DISH_INGREDIENT_ID='SET_DISH_INGREDIENT_ID'; \nexport const SET_DELETE_PRODUCT=\"SET_DELETE_PRODUCT\";","import $ from 'jquery';\nexport function closeModal(e){ \n    if(e){\n        e.preventDefault();\n    }\n    $('.modal').css({'display':'none'});\n    $('body').toggleClass('modal-opened');\n}\nexport function openModal(e){ \n    if(e){\n        e.preventDefault();\n    }\n    $('.modal').css({'display':'block'});\n    $('body').toggleClass('modal-opened');\n}","export function randomString(length) {\n    let result='';\n    const characters= 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength=characters.length;\n    for ( let i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }","import React from 'react';\nimport api from \"../../api/api\";\nimport {connect} from \"react-redux\";\nimport {addStrongDish,getStrongsDishes} from \"../../actions/strongDishActions\";\nimport {deleteIngredientDish,clearIngredientsByDish} from \"../../actions/ingredientByDishActions\";\nimport {setDishId,setAddIngredient,setNextIdDishIngredient} from '../../actions/modalActions';\nimport {openModal} from '../../helper/modal.helper';\nimport {randomString} from '../../helper/randomString.helper';\nimport PropTypes from 'prop-types';\nexport class AddStrongDish extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            name:'',\n            description:'',\n            picture:'',\n            pictureName:'',\n            category:'',\n            price:'',\n            error:false,\n            ingredientsByDish:[]\n        }\n    }\n    onAddIngredient=(e)=>{\n        e.preventDefault();\n        this.props.setAddIngredient();\n        setTimeout(() => {\n            openModal(e);\n        }, 500);\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }   \n    pictureDish=(e)=>{\n        if(e.target.files[0]!==null ||e.target.files[0]!==undefined){\n            this.setState({\n                picture:e.target.files[0],\n                pictureName:e.target.files[0].name\n            });\n        }\n    } \n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.ingredientsByDish !== prevState.ingredientsByDish) {\n          return({ ingredientsByDish: nextProps.ingredientsByDish });\n        }\n    }\n    addNewStrongDish=(e)=>{ \n        if(e){\n            e.preventDefault();\n        }\n        const {\n            id ,\n            name,\n            description,\n            price,\n            category,\n            picture\n        } =this.state;\n        const formData = new FormData(),\n        _this=this;\n        if(name===''||price===''||description===''||category===''||picture===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            }); \n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('price',price);\n            formData.append('description',description);\n            formData.append('picture',picture)\n            formData.append('category',category);\n            this.props.addStrongDish(formData);\n            if(typeof this.props.ingredientsByDish!=='undefined' && this.props.ingredientsByDish.length > 0){\n                setTimeout(() => {\n                        _this.props.ingredientsByDish.forEach(function(ing) {\n                            api.post('/api/ingredient-to-dish/add/',ing)\n                            .then((res)=>{\n                                console.log(res);\n                            })\n                            .catch(function (error) {\n                                console.log(error);\n                            });\n                        });\n                },900);\n            }\n            setTimeout(() => {\n                _this.props.getStrongsDishes();\n                _this.props.history.push('/admin/main-courses'); \n            }, 1900); \n        }  \n    }\n    deleteIngredientDish=(e,ing)=>{\n        e.preventDefault();\n        this.props.deleteIngredientDish(ing.id_ingredient_dish);\n    }\n    getIngredientsByDishId=()=>{\n        if(this.state.ingredientsByDish.length>0 ){\n            return(\n                <React.Fragment>\n                    <h1>Ingredients</h1>\n                    <button id=\"add-ingredient\" className=\"btn btn-success\" \n                        onClick={(e)=>this.onAddIngredient(e)}>\n                            Add Ingredient\n                    </button>\n                    <div className=\"ingredients-container\">\n                        {this.state.ingredientsByDish.map(ing=>\n                            <div className=\"ing-box\">\n                                <button className=\"btn btn-delete\" onClick={(e)=>this.deleteIngredientDish(e,ing)}>X</button>\n                                <h5>{ing.name}</h5>\n                                <img src={ing.img} alt={ing.name} style={{maxWidth:'130px',float:'left',margin:'10px',maxHeight:'80px'}}/>\n                            </div>\n                        )}\n                    </div>\n                </React.Fragment>\n            )\n        }  \n        else{\n            return(\n                <React.Fragment>\n                    <button id=\"add-ingredient\" className=\"btn btn-success\" \n                        onClick={(e)=>this.onAddIngredient(e)}>\n                            Add Ingredient\n                    </button>\n                    <p>No Ingredients</p>       \n                </React.Fragment>\n            )\n        }  \n    }\n    componentDidMount=async()=>{\n        let totalOfItems=1, \n        idString='',\n        _this=this;\n        try {\n            _this.props.clearIngredientsByDish();\n            const customRandomString=randomString(4); \n            await api.get('/api/strongs-dishes')\n                .then(response => {\n                    for(let i = 0; i <= response.data.length; ++i){\n                            ++totalOfItems;\n                    }\n                }).then(()=>{\n                    idString=totalOfItems+1+'ADDEDBGD_'+customRandomString;//console.log(idString); \n                })\n                .catch(error => {\n                    console.log(error);\n            });\n            await api.get('/api/ingredient-to-dish/count/')\n            .then((res)=>{\n                if(res.data.maxIngredientDishId){\n                    const nextIdIngDish=parseInt(res.data.maxIngredientDishId)+1;\n                    _this.props.setNextIdDishIngredient(nextIdIngDish)\n                }\n            })\n        } catch (error) {\n            console.log('An error occurs in AddStrongDish');\n            console.log(error); \n        }\n        finally{\n            setTimeout(() => {\n                _this.setState({\n                    id:idString\n                });\n                _this.props.setDishId(idString); \n            }, 300);\n        }\n    }\n    render(){\n        const {error} = this.state;\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Add New Main Course</h2>\n                            <form onSubmit={this.addNewStrongDish}>\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" defaultValue={this.state.id} \n                                    onChange={this.onChange} className=\"\" style={{display:'none'}}\n                                     name=\"id\"/>\n                                    <input type=\"text\" onChange={this.onChange} name=\"name\"\n                                     className=\"form-control\" placeholder=\"Name\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Description</label>\n                                    <input type=\"text\"\n                                        name=\"description\"\n                                     onChange={this.onChange} className=\"form-control\" \n                                    placeholder=\"Description\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Picture</label>\n                                    <input type=\"file\" onChange={this.pictureDish} \n                                    className=\"form-control-file\" \n                                    placeholder=\"Picture\" name=\"picture\"/>\n                                    {this.state.pictureName && (\n                                            <div id=\"picture_uploaded\">\n                                                You have uploaded a file named {this.state.pictureName}\n                                            </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Category</label>\n                                    <input type=\"text\" onChange={this.onChange} \n                                    className=\"form-control\"\n                                    name=\"category\"\n                                     placeholder=\"Category\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Price</label>\n                                    <input type=\"text\" onChange={this.onChange} \n                                    className=\"form-control\" \n                                    name=\"price\"\n                                    placeholder=\"Price\" />\n                                </div>\n                                {this.state.ingredientsByDish?this.getIngredientsByDishId():''}\n                            {error ? \n                            <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                All the fields are required\n                            </div>\n                            :''\n                            }\n                                <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Add</button>\n                            </form>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAddStrongDish.propTypes = {\n    clearIngredientsByDish: PropTypes.func.isRequired,\n    deleteIngredientDish: PropTypes.func.isRequired,\n    setNextIdDishIngredient: PropTypes.func.isRequired,\n    setDishId: PropTypes.func.isRequired,\n    setAddIngredient: PropTypes.func.isRequired,\n    addStrongDish: PropTypes.func.isRequired,\n    getStrongsDishes: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    strongsDishes:state.strongsDishes.strongsDishes,\n    ingredientsByDish:state.ingredientsByDish.ingredientsByDish,\n    idDish:state.modals.idDish,\n    nextIdDishIngredient:state.modals.nextIdDishIngredient\n})\nexport default connect(mapStateToProps,{clearIngredientsByDish,deleteIngredientDish,setNextIdDishIngredient,setDishId,setAddIngredient,addStrongDish,getStrongsDishes})(AddStrongDish);","import { SHOW_ENTREES,DELETE_ENTREE, ADD_ENTREE,SHOW_ENTREE,EDIT_ENTREE} from \"../constants/entreeTypes\";\nimport api from '../api/api';\nexport  const getEntrees=()=>async dispatch=>{\n    const response = await api.get('/api/entrees');\n    dispatch({\n        type:SHOW_ENTREES,\n        payload:response.data\n    })\n}\nexport const deleteEntree =id=>async dispatch=>{\n    await api.delete(`/api/entree/delete/${id}`);\n    dispatch({\n        type:DELETE_ENTREE,\n        payload:id\n    })\n}\nexport const showEntree=id=>async dispatch=>{\n    const response=await api.get(`/api/entree/show/${id}`);\n    dispatch({\n        type:SHOW_ENTREE,\n        payload:response.data\n    })\n}\nexport const addEntree=entree=>async dispatch=>{\n    const response = await api.post('/api/entree/add/',entree);\n    dispatch({\n        type:ADD_ENTREE,\n        payload:response.data\n    })\n}\nexport const editEntree=(entree,id)=>async dispatch=>{\n    return await api.put('/api/entree/update/'+id,entree)\n    .then((res)=>{ \n        dispatch({\n            type:EDIT_ENTREE,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in entreeActions.editEntree');\n        console.log(err);\n    });\n}\nexport const updateEntree=(entree,id)=>async dispatch=>{\n    return await api.put('/api/entree/update-img/'+id,entree,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    })\n    .then((res)=>{ \n        dispatch({\n            type:EDIT_ENTREE,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in entreeActions.updateEntree');\n        console.log(err);\n    });\n}","export const ADD_ENTREE='ADD_ENTREE';\nexport const SHOW_ENTREES='SHOW_ENTREES';\nexport const SHOW_ENTREE='SHOW_ENTREE';\nexport const EDIT_ENTREE='EDIT_ENTREE';\nexport const DELETE_ENTREE='DELETE_ENTREE';","import React from 'react';\nimport api from \"../../api/api\";\nimport {connect} from \"react-redux\";\nimport {addEntree,getEntrees} from \"../../actions/entreeActions\";\nimport {deleteIngredientDish,clearIngredientsByDish} from \"../../actions/ingredientByDishActions\";\nimport {setDishId,setAddIngredient,setNextIdDishIngredient} from '../../actions/modalActions';\nimport {openModal} from '../../helper/modal.helper';\nimport {randomString} from '../../helper/randomString.helper';\nimport PropTypes from 'prop-types';\nexport class AddEntree extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            name:'',\n            description:'',\n            picture:'',\n            pictureName:'',\n            category:'',\n            price:'',\n            error:false,\n            ingredientsByDish:[]\n        }\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.ingredientsByDish !== prevState.ingredientsByDish) {\n          return({ ingredientsByDish: nextProps.ingredientsByDish });\n        }\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }  \n    onAddIngredient=(e)=>{\n        e.preventDefault();\n        this.props.setAddIngredient();\n        setTimeout(() => {\n            openModal(e);\n        }, 500);\n    }\n    pictureDish=(e)=>{\n        if(e.target.files[0]!==null ||e.target.files[0]!==undefined){\n            this.setState({\n                picture:e.target.files[0],\n                pictureName:e.target.files[0].name\n            });\n        }\n    } \n    addNewEntree=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        const {\n            id ,\n            name,\n            description,\n            price,\n            category,\n            picture\n        } =this.state;\n        const formData = new FormData(),\n        _this=this;\n        if(name===''||price===''||description===''||category===''||picture===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('price',price);\n            formData.append('description',description);\n            formData.append('picture',picture)\n            formData.append('category',category);\n            this.props.addEntree(formData);\n            if(typeof this.props.ingredientsByDish!=='undefined' && this.props.ingredientsByDish.length > 0){\n                setTimeout(() => {\n                        _this.props.ingredientsByDish.forEach(function(ing) {\n                            api.post('/api/ingredient-to-dish/add/',ing)\n                            .then((res)=>{\n                                console.log(res);\n                            })\n                            .catch(function (error) {\n                                console.log(error);\n                            });\n                        });\n                },900);\n            }\n            setTimeout(() => {\n                _this.props.getEntrees();\n                _this.props.history.push('/admin/appetizers'); \n            }, 1900);\n        }  \n    }\n    deleteIngredientDish=(e,ing)=>{\n        e.preventDefault();\n        this.props.deleteIngredientDish(ing.id_ingredient_dish);\n    }\n    getIngredientsByDishId=()=>{\n        if(this.state.ingredientsByDish.length>0 ){\n            return(\n                <React.Fragment>\n                    <h1>Ingredients</h1>\n                    <button id=\"add-ingredient\" className=\"btn btn-success\" \n                        onClick={(e)=>this.onAddIngredient(e)}>\n                            Add Ingredient\n                    </button>\n                    <div className=\"ingredients-container\">\n                        {this.state.ingredientsByDish.map(ing=>\n                            <div className=\"ing-box\">\n                                <button className=\"btn btn-delete\" onClick={(e)=>this.deleteIngredientDish(e,ing)}>X</button>\n                                <h5>{ing.name}</h5>\n                                <img src={ing.img} alt={ing.name} style={{maxWidth:'130px',float:'left',margin:'10px',maxHeight:'80px'}}/>\n                            </div>\n                        )}\n                    </div>\n                </React.Fragment>\n            )\n        }  \n        else{\n            return(\n                <React.Fragment>\n                    <button id=\"add-ingredient\" className=\"btn btn-success\" \n                        onClick={(e)=>this.onAddIngredient(e)}>\n                            Add Ingredient\n                    </button>\n                    <p>No Ingredients</p>       \n                </React.Fragment>\n            )\n        }  \n    }\n    componentDidMount=async()=>{\n        let totalOfItems=1, \n        idString='',\n        _this=this;\n        const customRandomString=randomString(4);\n        try {\n            _this.props.clearIngredientsByDish();\n            await api.get('/api/entrees')\n                .then(response => {\n                    for(let i = 0; i <=response.data.length; ++i){\n                        ++totalOfItems;\n                    }\n                }).then(()=>{\n                    idString=totalOfItems+1+'ADDEDENTR_'+customRandomString;//console.log(idString); \n                })\n                .catch(error => {\n                    console.log(error);\n            });\n            await api.get('/api/ingredient-to-dish/count/')\n            .then((res)=>{\n                if(res.data.maxIngredientDishId){\n                    const nextIdIngDish=parseInt(res.data.maxIngredientDishId)+1;\n                    _this.props.setNextIdDishIngredient(nextIdIngDish)\n                }\n            })\n        } catch (error) {\n            console.log('An error occurs AddEntree.componentDidMount');\n            console.log(error);\n        }\n        finally{\n            setTimeout(() => {\n                _this.setState({\n                    id:idString\n                });\n                _this.props.setDishId(idString); \n            }, 300);\n        }\n    }\n    render(){\n        const {error} = this.state;\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Add New Appetizer</h2>\n                            <form onSubmit={this.addNewEntree} >\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" defaultValue={this.state.id} \n                                    onChange={this.onChange} className=\"\" style={{display:'none'}}\n                                     name=\"id\"/>\n                                    <input type=\"text\" onChange={this.onChange} name=\"name\"\n                                     className=\"form-control\" placeholder=\"Name\" data-testid=\"name-entree\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Description</label>\n                                    <input type=\"text\"\n                                        name=\"description\"\n                                     onChange={this.onChange} className=\"form-control\" \n                                    placeholder=\"Description\" data-testid=\"description-entree\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Picture</label>\n                                    <input type=\"file\" onChange={this.pictureDish} \n                                    className=\"form-control-file\" \n                                    placeholder=\"Picture\" name=\"picture\" data-testid=\"picture-entree\"/>\n                                    {this.state.pictureName && (\n                                    <div id=\"picture_uploaded\">\n                                        You have uploaded a file named {this.state.pictureName}\n                                    </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Category</label>\n                                    <input type=\"text\" onChange={this.onChange} \n                                    className=\"form-control\"\n                                    name=\"category\"\n                                     placeholder=\"Category\"  data-testid=\"category-entree\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Price</label>\n                                    <input type=\"text\" onChange={this.onChange} \n                                    className=\"form-control\" \n                                    name=\"price\"\n                                    placeholder=\"Price\"  data-testid=\"price-entree\"/>\n                                </div>\n                                {this.state.ingredientsByDish?this.getIngredientsByDishId():''}\n                            {error ? \n                            <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                All the fields are required\n                            </div>\n                            :''\n                            }\n                                <button data-testid=\"btn-submit\" type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Add</button>\n                            </form>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAddEntree.propTypes = {\n    clearIngredientsByDish: PropTypes.func.isRequired,\n    deleteIngredientDish: PropTypes.func.isRequired,\n    setNextIdDishIngredient: PropTypes.func.isRequired,\n    setDishId: PropTypes.func.isRequired,\n    setAddIngredient: PropTypes.func.isRequired,\n    addEntree: PropTypes.func.isRequired,\n    getEntrees: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    entrees:state.entrees.entrees,\n    ingredientsByDish:state.ingredientsByDish.ingredientsByDish,\n    idDish:state.modals.idDish,\n    nextIdDishIngredient:state.modals.nextIdDishIngredient\n})\nexport default connect(mapStateToProps,{clearIngredientsByDish,deleteIngredientDish,setNextIdDishIngredient,setDishId,setAddIngredient,addEntree,getEntrees})(AddEntree);","import { SHOW_INGREDIENTS,DELETE_INGREDIENT, ADD_INGREDIENT,SHOW_INGREDIENT,EDIT_INGREDIENT} from \"../constants/ingredientTypes\";\nimport api from '../api/api';\nexport  const getIngredients=()=>async dispatch=>{\n    const response = await api.get('/api/ingredients');\n    dispatch({\n        type:SHOW_INGREDIENTS,\n        payload:response.data\n    })\n}\nexport const deleteIngredient =id=>async dispatch=>{\n    await api.delete(`/api/ingredient/delete/${id}`);\n    dispatch({\n        type:DELETE_INGREDIENT,\n        payload:id\n    })\n}\nexport const showIngredient=id=>async dispatch=>{\n    const response=await api.get(`/api/ingredient/show/${id}`);\n    dispatch({\n        type:SHOW_INGREDIENT,\n        payload:response.data\n    })\n}\nexport const addIngredient=ingredient=>async dispatch=>{\n    const response = await api.post('/api/ingredient/add/',ingredient,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    });\n    dispatch({\n        type:ADD_INGREDIENT,\n        payload:response.data\n    })\n}\nexport const editIngredient=(ingredient,id)=>async dispatch=>{\n    return await api.put('/api/ingredient/update/'+id,ingredient)\n    .then((res)=>{\n        dispatch({\n            type:EDIT_INGREDIENT,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in ingredientActions.editIngredient');\n        console.log(err);\n    });\n    \n}\nexport const updateIngredient=(ingredient,id)=>async dispatch=>{\n    return await api.put('/api/ingredient/update-img/'+id,ingredient,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    })\n    .then((res)=>{\n        dispatch({\n            type:EDIT_INGREDIENT,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in ingredientActions.updateIngredient');\n        console.log(err);\n    });\n    \n}","export const ADD_INGREDIENT='ADD_INGREDIENT';\nexport const SHOW_INGREDIENTS='SHOW_INGREDIENTS';\nexport const SHOW_INGREDIENT='SHOW_INGREDIENT';\nexport const EDIT_INGREDIENT='EDIT_INGREDIENT';\nexport const DELETE_INGREDIENT='DELETE_INGREDIENT';\nexport const GET_INGREDIENTS_BY_DISH_ID='GET_INGREDIENTS_BY_DISH_ID';\nexport const ADD_INGREDIENT_TO_DISH='ADD_INGREDIENT_TO_DISH';\nexport const DELETE_INGREDIENT_TO_DISH='DELETE_INGREDIENT_TO_DISH';","import React from 'react';\nimport api from \"../../api/api\";\nimport {connect} from \"react-redux\";\nimport {addIngredient,getIngredients} from \"../../actions/ingredientActions\";\nimport {randomString} from '../../helper/randomString.helper';\nimport PropTypes from 'prop-types';\nexport class AddIngredient extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            name:'',\n            img:'',\n            error:false\n        }\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }  \n    imgIngredient=(e)=>{\n        if(e.target.files[0]!==null ||e.target.files[0]!==undefined){\n            this.setState({\n                img:e.target.files[0]\n            });\n        }\n    }\n    addNewIngredient=(e)=>{\n        e.preventDefault();\n        const {\n            id ,\n            name,\n            img\n        } =this.state;\n        const formData = new FormData(),\n        _this=this;\n        if(name===''||img===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('img',img); \n            this.props.addIngredient(formData);\n            setTimeout(() => {\n                _this.props.getIngredients();\n                _this.props.history.push('/admin/ingredients'); \n            }, 900);\n        } \n        \n    }\n    componentDidMount=async()=>{\n        let totalOfItems=1,\n        idString='',\n        _this=this;\n        const customRandomString=randomString(4);\n        try {\n            await api.get('/api/ingredients')\n                .then(response => {\n                    for(let i = 0; i <= response.data.length; ++i){\n                            ++totalOfItems;\n                    }\n                }).then(()=>{\n                    idString=totalOfItems+1+'ADDEDING_'+customRandomString;//console.log(idString); \n                })\n                .catch(error => {\n                    console.log(error);\n            });\n        } catch (error) {\n            console.log('An error occurs in AddIngredient.componentDidMount');\n            console.log(error); \n        }\n        finally{\n            setTimeout(() => {\n                _this.setState({\n                    id:idString\n                });\n                console.log('this.state.id '+this.state.id);\n            }, 300);\n        }\n    }\n    render(){\n        const {error} = this.state;\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Add New Ingredient</h2>\n                            <form onSubmit={this.addNewIngredient}>\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" defaultValue={this.state.id} \n                                    onChange={this.onChange} name=\"id\" style={{display:'none'}}\n                                    />\n                                    <input type=\"text\" onChange={this.onChange} name=\"name\"\n                                     className=\"form-control\" placeholder=\"Name\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Picture</label>\n                                    <input type=\"file\" onChange={this.imgIngredient} \n                                    className=\"form-control-file\" \n                                    placeholder=\"Picture\" name=\"img\"/>\n                                </div>\n                            {error ? \n                            <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                All the fields are required\n                            </div>\n                            :''\n                            }\n                                <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Add</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAddIngredient.propTypes = {\n    addIngredient: PropTypes.func.isRequired,\n    getIngredients: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    ingredients:state.ingredients.ingredients\n})\nexport default connect(mapStateToProps,{addIngredient,getIngredients})(AddIngredient);","import { SHOW_DESSERTS,DELETE_DESSERT,ADD_DESSERT, SHOW_DESSERT,EDIT_DESSERT,UPDATE_DESSERT} from \"../constants/dessertTypes\";\nimport api from '../api/api';\nexport  const getDesserts=()=>async dispatch=>{\n    const response = await api.get('/api/desserts');\n    dispatch({\n        type:SHOW_DESSERTS,\n        payload:response.data\n    })\n}\nexport const deleteDessert =id=>async dispatch=>{\n    await api.delete(`/api/dessert/delete/${id}`);\n    dispatch({\n        type:DELETE_DESSERT,\n        payload:id\n    })\n}\nexport const addDessert=dessert=>async dispatch=>{\n    const response = await api.post('/api/dessert/add/',dessert,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    });\n    dispatch({\n        type:ADD_DESSERT,\n        payload:response.data\n    })\n}\nexport const showDessert=id=>async dispatch=>{\n    const response=await api.get(`/api/dessert/show/${id}`);\n    dispatch({\n        type:SHOW_DESSERT,\n        payload:response.data\n    })\n}\nexport const editDessert=(dessert,id)=>async dispatch=>{\n    return await api.put('/api/dessert/update/'+id,dessert)\n    .then((res)=>{ \n        dispatch({\n            type:EDIT_DESSERT,\n            payload:res.data\n        }) \n    })\n    .catch((err)=>{\n        console.log('An error occurs in dessertActions.editDessert');\n        console.log(err);\n    });    \n}\nexport const updateDessert=(dessert,id)=>async dispatch=>{\n    return await api.put('/api/dessert/update-img/'+id,dessert,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    })\n    .then((res)=>{ \n        dispatch({\n            type:UPDATE_DESSERT,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in dessertActions.updateDessert');\n        console.log(err);\n    });\n}","export const ADD_DESSERT='ADD_DESSERT';\nexport const SHOW_DESSERTS='SHOW_DESSERTS';\nexport const SHOW_DESSERT='SHOW_DESSERT';\nexport const EDIT_DESSERT='EDIT_DESSERT';\nexport const UPDATE_DESSERT='UPDATE_DESSERT';\nexport const DELETE_DESSERT='DELETE_DESSERT';","import React from 'react';\nimport api from \"../../api/api\";\nimport {connect} from \"react-redux\";\nimport {addDessert,getDesserts} from \"../../actions/dessertActions\";\nimport {deleteIngredientDish,clearIngredientsByDish} from \"../../actions/ingredientByDishActions\";\nimport {setDishId,setAddIngredient,setNextIdDishIngredient} from '../../actions/modalActions';\nimport {openModal} from '../../helper/modal.helper';\nimport {randomString} from '../../helper/randomString.helper';\nimport PropTypes from 'prop-types';\nexport class AddDessert extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            name:'',\n            description:'',\n            picture:'',\n            pictureName:'',\n            category:'',\n            price:'',\n            error:false,\n            ingredientsByDish:[]\n        }\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.ingredientsByDish !== prevState.ingredientsByDish) {\n          return({ ingredientsByDish: nextProps.ingredientsByDish });\n        }\n    }\n    onAddIngredient=(e)=>{\n        e.preventDefault();\n        this.props.setAddIngredient();\n        setTimeout(() => {\n            openModal(e);\n        }, 500);\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }  \n    pictureDessert=(e)=>{\n        if(e.target.files[0]!==null ||e.target.files[0]!==undefined){\n            this.setState({\n                picture:e.target.files[0],\n                pictureName:e.target.files[0].name\n            }); \n        }\n    }  \n    addNewDessert=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        const {\n            id ,\n            name,\n            description,\n            price,\n            picture\n        } =this.state;\n        const formData = new FormData(),\n        _this=this;\n        if(name===''||price===''||description===''||picture===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('price',price);\n            formData.append('description',description);\n            formData.append('picture',picture);\n            this.props.addDessert(formData);\n            if(typeof this.props.ingredientsByDish!=='undefined' && this.props.ingredientsByDish.length > 0){\n                setTimeout(() => {\n                        _this.props.ingredientsByDish.forEach(function(ing) {\n                            api.post('/api/ingredient-to-dish/add/',ing)\n                            .then((res)=>{\n                                console.log(res);\n                            })\n                            .catch(function (error) {\n                                console.log(error);\n                            }); \n                        });\n                }, 900);\n            }\n             setTimeout(() => {\n                _this.props.getDesserts();\n                _this.props.history.push('/admin/desserts'); \n            }, 1900); \n        }  \n    }\n    deleteIngredientDish=(e,ing)=>{\n        e.preventDefault();\n        this.props.deleteIngredientDish(ing.id_ingredient_dish);\n    }\n    getIngredientsByDishId=()=>{\n        if(this.state.ingredientsByDish.length>0){\n            return(\n                <React.Fragment>\n                    <h1>Ingredients</h1>\n                    <button id=\"add-ingredient\" className=\"btn btn-success\" \n                        onClick={(e)=>this.onAddIngredient(e)}>\n                            Add Ingredient\n                    </button>\n                    <div className=\"ingredients-container\">\n                        {this.state.ingredientsByDish.map(ing=>\n                            <div className=\"ing-box\">\n                                <button className=\"btn btn-delete\" onClick={(e)=>this.deleteIngredientDish(e,ing)}>X</button>\n                                <h5>{ing.name}</h5>\n                                <img src={ing.img} alt={ing.name} style={{maxWidth:'130px',float:'left',margin:'10px',maxHeight:'80px'}}/>\n                            </div>\n                        )}\n                    </div>\n                </React.Fragment>\n            )\n        }  \n        else{\n            return(\n                <React.Fragment>\n                    <button id=\"add-ingredient\" className=\"btn btn-success\" \n                        onClick={(e)=>this.onAddIngredient(e)}>\n                            Add Ingredient\n                    </button>\n                    <p>No Ingredients</p>       \n                </React.Fragment>\n            )\n        }  \n    }\n    componentDidMount=async()=>{ \n        let totalOfItems=1,\n        idString='',\n        _this=this;\n        try { \n            _this.props.clearIngredientsByDish();\n            const customRandomString=randomString(4);\n            await api.get('/api/desserts')\n                .then(response => {\n                    for(let i = 0; i <= response.data.length; ++i){\n                        ++totalOfItems;\n                    }\n                }).then(()=>{\n                    idString=totalOfItems+1+'ADDEDDESRT_'+customRandomString;//console.log(idString); \n                })\n                .catch(error => {\n                    console.log('An error occurs in AddDessert.componentDidMount() but dont worry about');\n            });\n            await api.get('/api/ingredient-to-dish/count/')\n            .then((res)=>{\n                if(res.data.maxIngredientDishId){\n                    var nextIdIngDish=parseInt(res.data.maxIngredientDishId)+1;\n                    _this.props.setNextIdDishIngredient(nextIdIngDish)\n                }\n            })\n        } catch (error) {\n            console.log('An error occurs in AddDessert.componentDidMount');\n            console.log(error);\n        }\n        finally{\n            setTimeout(() => {\n                _this.setState({\n                    id:idString\n                });\n                _this.props.setDishId(idString); \n            }, 300);\n        }\n    }\n    render(){\n        const {error} = this.state;\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Add New Dessert</h2>\n                            <form onSubmit={this.addNewDessert} data-testid=\"form\">\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" defaultValue={this.state.id} \n                                    onChange={this.onChange} style={{display:'none'}}\n                                     name=\"id\"/>\n                                    <input type=\"text\" onChange={this.onChange} name=\"name\" data-testid=\"name-dessert\"\n                                     className=\"form-control name-dessert\" placeholder=\"Name\" id=\"name\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Description</label>\n                                    <input type=\"text\"\n                                        name=\"description\" data-testid=\"description-dessert\"\n                                     onChange={this.onChange} className=\"form-control\" \n                                    placeholder=\"Description\" id=\"description\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Picture</label>\n                                    <input type=\"file\" onChange={this.pictureDessert} \n                                    className=\"form-control-file\" id=\"picture\" data-testid=\"picture-dessert\"\n                                    placeholder=\"Picture\" name=\"picture\"/>\n                                            {this.state.pictureName && (\n                                            <div id=\"picture_uploaded\">\n                                                You have uploaded a file named {this.state.pictureName}\n                                            </div>\n                                            )}\n                                </div>\n                                \n                                <div className=\"form-group\">\n                                    <label>Price</label>\n                                    <input type=\"text\" onChange={this.onChange} \n                                    className=\"form-control\" data-testid=\"price-dessert\"\n                                    name=\"price\" id=\"price\"\n                                    placeholder=\"Price\" />\n                                </div>\n                            {this.state.ingredientsByDish?this.getIngredientsByDishId():''}\n                            {error ? \n                            <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                All the fields are required\n                            </div>\n                            :''\n                            }\n                                <button data-testid=\"btn-submit\" type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Add</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAddDessert.propTypes = {\n    clearIngredientsByDish: PropTypes.func.isRequired,\n    deleteIngredientDish: PropTypes.func.isRequired,\n    setNextIdDishIngredient: PropTypes.func.isRequired,\n    setDishId: PropTypes.func.isRequired,\n    setAddIngredient: PropTypes.func.isRequired,\n    addDessert: PropTypes.func.isRequired,\n    getDesserts: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    desserts:state.desserts.desserts,\n    ingredientsByDish:state.ingredientsByDish.ingredientsByDish,\n    idDish:state.modals.idDish,\n    nextIdDishIngredient:state.modals.nextIdDishIngredient\n})\nexport default connect(mapStateToProps,{clearIngredientsByDish,deleteIngredientDish,setNextIdDishIngredient,setDishId,setAddIngredient,addDessert,getDesserts})(AddDessert);","import { SHOW_DRINKS,DELETE_DRINK,ADD_DRINK, SHOW_DRINK, EDIT_DRINK} from \"../constants/drinkTypes\"\nimport api from '../api/api';\nexport  const getDrinks=()=>async dispatch=>{\n    const response = await api.get('/api/drinks');\n    dispatch({\n        type:SHOW_DRINKS,\n        payload:response.data\n    })\n}\nexport const deleteDrink =id=>async dispatch=>{\n    await api.delete(`/api/drink/delete/${id}`);\n    dispatch({\n        type:DELETE_DRINK,\n        payload:id\n    })\n}\nexport const addDrink=drink=>async dispatch=>{\n    const response = await api.post('/api/drink/add/',drink,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    });\n    dispatch({\n        type:ADD_DRINK,\n        payload:response.data\n    })\n}\nexport const showDrink=id=>async dispatch=>{\n    const response=await api.get(`/api/drink/show/${id}`);\n    dispatch({\n        type:SHOW_DRINK,\n        payload:response.data\n    })\n}\n\nexport const editDrink=(drink,id)=>async dispatch=>{\n    return await api.put('/api/drink/update/'+id,drink)\n    .then((res)=>{ \n        dispatch({\n            type:EDIT_DRINK,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in drinkActions.editDrink');\n        console.log(err);\n    });\n}\nexport const updateDrink=(drink,id)=>async dispatch=>{\n    return await api.put('/api/drink/update-img/'+id,drink,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    })\n    .then((res)=>{ \n        dispatch({\n            type:EDIT_DRINK,\n            payload:res.data\n        })\n    })\n    .catch((err)=>{\n        console.log('An error occurs in drinkActions.updateDrink');\n        console.log(err);\n    });\n}","export const ADD_DRINK='ADD_DRINK';\nexport const SHOW_DRINKS='SHOW_DRINKS';\nexport const SHOW_DRINK='SHOW_DRINK';\nexport const EDIT_DRINK='EDIT_DRINK';\nexport const DELETE_DRINK='DELETE_DRINK';","import React from 'react';\nimport api from \"../../api/api\";\nimport {connect} from \"react-redux\";\nimport {addDrink,getDrinks} from \"../../actions/drinkActions\";\nimport {randomString} from '../../helper/randomString.helper';\nimport PropTypes from 'prop-types';\nexport class AddDrink extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            name:'',\n            description:'',\n            picture:'',\n            pictureName:'',\n            price:'',\n            error:false\n        }\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }   \n    pictureDrink=(e)=>{\n        if(e.target.files[0]!==null ||e.target.files[0]!==undefined){\n            this.setState({\n                picture:e.target.files[0],\n                pictureName:e.target.files[0].name\n            });\n        }\n    } \n    addNewDrink=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        const {\n            id ,\n            name,\n            description,\n            price,\n            picture\n        } =this.state;\n        const formData = new FormData(),\n        _this=this;\n        if(name===''||price===''||description===''||picture===''||picture===null){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            }); \n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('price',price);\n            formData.append('description',description);\n            formData.append('picture',picture)\n            this.props.addDrink(formData);\n            setTimeout(() => {\n                _this.props.getDrinks();\n                _this.props.history.push('/admin/drinks'); \n            }, 900);\n        }  \n    }\n    componentDidMount=async()=>{\n        let totalOfItems=1, \n        idString='';\n        const customRandomString=randomString(4);\n        await api.get('/api/drinks')\n            .then(response => {\n                for(let i = 0; i <= response.data.length; ++i){\n                    ++totalOfItems;\n                }\n            }).then(()=>{\n                idString=totalOfItems+1+'ADDEDDRK_'+customRandomString;//console.log(idString); \n            })\n            .catch(error => {\n                console.log(error);\n        });\n        setTimeout(() => {\n            this.setState({\n                id:idString\n            });\n            console.log('this.state.id '+this.state.id);\n        }, 300);\n        \n    }\n    render(){\n        const {error} = this.state;\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Add New Drink</h2>\n                            <form onSubmit={this.addNewDrink}>\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" defaultValue={this.state.id} \n                                    onChange={this.onChange} className=\"\" style={{display:'none'}}\n                                     name=\"id\"/>\n                                    <input type=\"text\" onChange={this.onChange} name=\"name\"\n                                     className=\"form-control\" placeholder=\"Name\" data-testid=\"name-drink\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Description</label>\n                                    <input type=\"text\"\n                                        name=\"description\"\n                                     onChange={this.onChange} className=\"form-control\" \n                                    placeholder=\"Description\" data-testid=\"description-drink\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Picture</label>\n                                    <input type=\"file\" onChange={this.pictureDrink} \n                                    className=\"form-control-file\" \n                                    placeholder=\"Picture\" name=\"picture\" data-testid=\"picture-drink\"/>\n                                    {this.state.pictureName && (\n                                            <div id=\"picture_uploaded\">\n                                                You have uploaded a file named {this.state.pictureName}\n                                            </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Price</label>\n                                    <input type=\"text\" onChange={this.onChange} \n                                    className=\"form-control\" \n                                    name=\"price\"\n                                    placeholder=\"Price\"  data-testid=\"price-drink\"/>\n                                </div>\n                            {error ? \n                            <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                All the fields are required\n                            </div>\n                            :''\n                            }\n                                <button data-testid=\"btn-submit\" type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Add</button>\n                            </form>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAddDrink.propTypes = {\n    addDrink: PropTypes.func.isRequired,\n    getDrinks: PropTypes.func.isRequired \n}\nconst mapStateToProps=state=>({\n    drinks:state.drinks.drinks\n})\nexport default connect(mapStateToProps,{addDrink,getDrinks})(AddDrink);","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport {openModal} from \"../../helper/modal.helper\";\nimport {setDelete} from \"../../actions/modalActions\";\n\nexport const StrongDish =props=>{ \n    const {id,name,price,picture} = props.info;\n    const deleteMainCourse=(e,id)=>{ \n        props.setDelete(id,'Main Course'); \n        setTimeout(() => {\n            openModal(e);\n        }, 900);\n    } \n    return(\n        <li className=\"list-group-item\" id={id}>\n            <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-8 d-flex justify-content-between align-items-center\">\n                    <p className=\"text-dark m-0\">\n                        {name}\n                    </p>\n                    <span className=\"badge badge-warning text-dark\"> $ {price}</span>\n                    <img src={picture} alt={name} className=\"responsive-img col-md-3\"/>\n                </div>\n                <div className=\"col-md-4 d-flex justify-content-end acciones\">\n                    <Link to={`/admin/edit/main-course/${id}`} className=\"btn btn-success mr-2\">Edit</Link>\n                    <button type=\"button\" className=\"btn btn-primary ml-2\" onClick={(e)=>deleteMainCourse(e,id)}>Delete</button>\n                </div>\n            </div>\n        </li>\n    )\n    \n}\nStrongDish.propTypes = {\n    setDelete: PropTypes.func.isRequired,\n    modals:PropTypes.string.isRequired,\n    productType:PropTypes.string.isRequired,\n    idToDelete:PropTypes.string.isRequired,\n    info: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        picture:PropTypes.string.isRequired,\n    }).isRequired\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setDelete: (id,type) => dispatch(setDelete(id,type))\n    }\n}\nconst mapStateToProps=state=>({\n    modals:state.modals.modals,\n    productType:state.modals.productType,\n    idToDelete:state.modals.idToDelete\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(React.memo(StrongDish));","import React,{Component} from 'react';\nimport {connect} from \"react-redux\";\nimport StrongDish from \"../../components/view/strongDish\";\nimport {getStrongsDishes} from \"../../actions/strongDishActions\";\nimport $ from 'jquery';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nexport class ShowStrongsDishes extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentPage:1,\n            totalItems:0,\n            maxItemsPerPage:3,\n            strongsDishesToShow:[\n                {\n                    category: \"fish\",\n                    description: \"Srhimp Salad\",\n                    id: \"10BGD\",\n                    name: \"Srhimp Avocado Roasted Salad\",\n                    picture: \"/img/uploads/shrimp-avocado-roasted-corn-salad.jpg\",\n                    price: \"7.50\"\n                },\n                {\n                    category: \"Soups\",\n                    description: \"Aztec Soup with Avocado\",\n                    id: \"11BGD\",\n                    name: \"Aztec Soup\",\n                    picture: \"/img/uploads/aztec-soup.jpg\",\n                    price: \"7.50\"  \n                },\n               { \n                    category: \"Pasta\",\n                    description: \"Made with stacked layers of pasta alternated with sauces and chicken plus vegetables and cheese, and sometimes topped with melted  \",\n                    id: \"1BGD\",\n                    name: \"Lasagna of Chicken\",\n                    picture: \"/img/strong-dish/lasagna.png\",\n                    price: \"14.35\"\n                }\n            ],\n            firstItemToShow:0,\n            totalPagination:[1,2]\n        }\n    }\n    async componentDidMount(){ \n        await this.props.getStrongsDishes();\n        const {strongsDishes}=this.props;\n        this.setState({\n            totalItems:strongsDishes.length\n        }); \n        const tempTotalPages=Math.ceil(strongsDishes.length/this.state.maxItemsPerPage);\n        const tempItems=[];\n        for (let index = 1; index <= tempTotalPages; index++) {\n            tempItems.push(index);\n        }\n        this.setState({\n            totalPagination:tempItems\n        });  \n        this.setStrongDishesItems();\n    }\n    componentWillReceiveProps(nextProps) {\n        try {\n            if(nextProps.match.params.page!==null){\n                const {page}=nextProps.match.params;\n                if(isNaN(page)===false){\n                    this.setState({\n                        currentPage:page \n                    });\n                    this.getPage(page); \n                    setTimeout(() => {    \n                        document.querySelector(\"#page-item-\"+page).classList.add(\"active\");\n                    }, 1200);\n                }\n            }\n        } \n        catch (error) {\n            console.log('An error occurs in ShowStrongsDishes.componentWillReceiveProps(),but dont worry about it :) ');\n            console.log(error);\n        }\n    }\n    renderStrongsDishes=()=>{\n        if(this.state.strongsDishesToShow.length===0){\n            return(\n                <div>\n                    Loading\n                </div>\n            )\n        }\n        else{\n            return(\n                this.state.strongsDishesToShow.map(strongDish=>\n                    <StrongDish key={strongDish.id} info={strongDish}/> \n                )\n            )\n        }\n    }\n    getNextPage=()=>{ \n        try {\n            if(this.state.currentPage<this.state.totalPagination.length){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)+1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    currentPage:tempCurrentPage,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.props.history.push(\"/admin/main-courses/\"+tempCurrentPage)\n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowStrongsDishes.getNextPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPrevPage=()=>{\n        try {\n            if(this.state.currentPage>1){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)-1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    firstItemToShow:tempFirstItemToShow,\n                    currentPage:tempCurrentPage\n                });\n                this.props.history.push(\"/admin/main-courses/\"+tempCurrentPage);\n            } \n        } catch (error) {\n            console.log(\"An error occurs in ShowStrongsDishes.getPrevPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPage=(index)=>{\n        try {\n            const tempFirstItemToShow=(index*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n            if($('.page-nav').hasClass('active')){\n                $('.page-nav').removeClass('active');\n            }\n            setTimeout(() => {\n                $('.page-nav:nth-child('+ parseInt(index+1)+')').addClass('active');\n                this.setState({\n                    currentPage:index,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.setStrongDishesItems(); \n            }, 200);\n        } catch (error) {\n            console.log('An error occurs in ShowStrongsDishes.getPage() , but dont worry about it');\n            console.log(error);\n        }\n    }\n    setStrongDishesItems=()=>{\n        const {strongsDishes}=this.props;\n        const tempStrongsDishesToShow=[];\n        let maxItemsLenght=parseInt(this.state.maxItemsPerPage*this.state.currentPage);\n        try {\n            let index = this.state.firstItemToShow;\n            do{ \n                if(maxItemsLenght>strongsDishes.length){\n                    maxItemsLenght=strongsDishes.length;\n                }\n                if(strongsDishes[index].name!==null){\n                    tempStrongsDishesToShow.push(strongsDishes[index]);\n                }\n                this.setState({\n                    strongsDishesToShow:tempStrongsDishesToShow\n                })\n                index++;\n            }\n            while(index <=maxItemsLenght);\n        } \n        catch (error) {\n            console.log('An error occurs in ShowStrongsDishes.setStrongDishesItems(), but dont worried about :)');\n            console.log(error);\n        }\n    }\n    getPagination=()=>{\n        return(\n            <React.Fragment>\n                <div style={{textAlign:'center'}}>\n                    <nav id=\"pagination-bottom\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getPrevPage()} href=\"#previous\">Previous</a>\n                            </li> \n                            {\n                                this.state.totalPagination.map((index,key)=> \n                                    <li className=\"page-item page-nav\" id={`page-item-${index}`} key={key}>\n                                        <Link to={`/admin/main-courses/${index}`} className=\"page-link\" onClick={()=>this.getPage(index)}>{index}</Link>\n                                    </li>\n                                )\n                            }\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getNextPage()} href=\"#next\">Next</a>\n                            </li> \n                        </ul>\n                    </nav>\n                </div>\n            </React.Fragment>\n        )\n    }\n    render(){\n        const {strongsDishes}=this.props;\n        if(!strongsDishes){\n            return(\n                <div>\n                    <p>Loading Data From Database ,please Wait...</p>\n                </div>\n            )\n        }\n        return(\n            <React.Fragment>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-9\">\n                        <ul>\n                            {this.renderStrongsDishes()}\n                            {this.getPagination()}\n                        </ul>\n                    </div>\n                </div> \n            </React.Fragment>\n        )\n    }\n}\nShowStrongsDishes.propTypes={\n    getStrongsDishes:PropTypes.func.isRequired,\n    strongsDishes:PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            picture: PropTypes.string.isRequired,\n            price: PropTypes.number.isRequired\n        }).isRequired\n    ).isRequired\n}\nconst mapStateToProps=state=>({\n    strongsDishes:state.strongsDishes.strongsDishes\n})\nexport default withRouter(connect(mapStateToProps,{getStrongsDishes})(ShowStrongsDishes));","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport {openModal} from \"../../helper/modal.helper\";\nimport {setDelete} from \"../../actions/modalActions\";\n\nexport const Ingredient=props=>{ \n    const {id,name,img} = props.info;\n    const deleteIngredient=(e,id)=>{\n        props.setDelete(id,'Ingredient'); \n        setTimeout(() => {\n            openModal(e);\n        }, 900);\n    } \n    return(\n        <li className=\"list-group-item\" id={id}>\n            <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-8 d-flex justify-content-between align-items-center\">\n                    <p className=\"text-dark m-0\">\n                        {name}\n                    </p>\n                    <img src={img} alt={name} className=\"responsive-img col-md-3\"/>\n                </div>\n                <div className=\"col-md-4 d-flex justify-content-end acciones\">\n                    <Link to={`/admin/edit/ingredient/${id}`} className=\"btn btn-success mr-2\">Edit</Link>\n                    <button type=\"button\" className=\"btn btn-primary ml-2\" onClick={(e)=>deleteIngredient(e,id)}>Delete</button>\n                </div>\n            </div>\n        </li>\n    ) \n}\nIngredient.propTypes = {\n    deleteIngredient: PropTypes.func.isRequired,\n    modals:PropTypes.string.isRequired,\n    productType:PropTypes.string.isRequired,\n    idToDelete:PropTypes.string.isRequired,\n    info: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired, \n        img:PropTypes.string.isRequired,\n    }).isRequired\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setDelete: (id,type) => dispatch(setDelete(id,type))\n    }\n}\nconst mapStateToProps=state=>({\n    modals:state.modals.modals,\n    productType:state.modals.productType,\n    idToDelete:state.modals.idToDelete\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(React.memo(Ingredient));","import React,{Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Ingredient from \"../../components/view/ingredient\";\nimport {getIngredients} from \"../../actions/ingredientActions\";\nimport $ from 'jquery'; \nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nexport class ShowIngredients extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentPage:1,\n            totalItems:0,\n            maxItemsPerPage:5,\n            ingredientsToShow:[\n                {\n                    \"id\": \"17ING\",\n                    \"name\": \"Salmon\",\n                    \"img\": \"/img/ingredients/salmon.jpg\"\n                },\n                {\n                    \"id\": \"18ING\",\n                    \"name\": \"Carrot\",\n                    \"img\": \"/img/ingredients/carrot.jpg\"\n                },\n                {\n                    \"id\": \"19ING\",\n                    \"name\": \"Eggs\",\n                    \"img\": \"/img/ingredients/eggs.jpg\"\n                },\n                {\n                    \"id\": \"1ING\",\n                    \"name\": \"Tomato\",\n                    \"img\": \"/img/ingredients/tomato.jpg\"\n                }\n            ],\n            firstItemToShow:0,\n            totalPagination:[1,2]\n        }\n    }\n    async componentDidMount(){\n        await this.props.getIngredients(); \n\n        const {ingredients}= this.props;\n        this.setState({\n            totalItems:ingredients.length\n        });\n        const tempTotalPages=Math.ceil(ingredients.length/this.state.maxItemsPerPage);\n        const tempItems=[];\n        for (let index = 1; index <= tempTotalPages; index++) {\n            tempItems.push(index);\n        }\n        this.setState({\n            totalPagination:tempItems\n        });\n        this.setIngredientsItems();\n    }\n    componentWillReceiveProps(nextProps) {\n        try {\n            if(nextProps.match.params.page!==null){\n                const {page}=nextProps.match.params;\n                if(isNaN(page)===false){\n                    this.setState({\n                        currentPage:page \n                    });\n                    this.getPage(page); \n                    setTimeout(() => {    \n                        document.querySelector(\"#page-item-\"+page).classList.add(\"active\");\n                    }, 1200);\n                }\n            }\n        } \n        catch (error) {\n            console.log('An error occurs in ShowIngredients.componentWillReceiveProps(),but dont worry about it :) ');\n            console.log(error);\n        }\n    } \n    renderIngredients=()=>{\n        if(this.state.ingredientsToShow.length===0){\n            return(\n                <div>\n                    Loading\n                </div>\n            )\n        }\n        else{\n            return(\n                this.state.ingredientsToShow.map(ingredient=>\n                    <Ingredient key={ingredient.id} info={ingredient}/> \n                )\n            )\n        }\n    }\n    getNextPage=()=>{ \n        try {\n            if(this.state.currentPage<this.state.totalPagination.length){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)+1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    currentPage:tempCurrentPage,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.props.history.push(\"/admin/ingredients/\"+tempCurrentPage)\n            }\n        } catch (error) {\n            console.log('An error occurs in ShowIngredients.getNextPage(),but dont worry about it :) ');\n            console.log(error);\n        }\n    }\n    getPrevPage=()=>{\n        try {\n            if(this.state.currentPage>1){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)-1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    firstItemToShow:tempFirstItemToShow,\n                    currentPage:tempCurrentPage\n                });\n                this.props.history.push(\"/admin/ingredients/\"+tempCurrentPage);\n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowIngredients.getPrevPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPage=(index)=>{\n        try {\n            var tempFirstItemToShow=(index*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n            if($('.page-nav').hasClass('active')){\n                $('.page-nav').removeClass('active');\n            }\n            setTimeout(() => {\n                $('.page-nav:nth-child('+ parseInt(index+1)+')').addClass('active');\n                this.setState({\n                    currentPage:index,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.setIngredientsItems(); \n            },200);\n        } catch (error) {\n            console.log('An error occurs in ShowIngredients.getPage() , but dont worry about it');\n            console.log(error);\n        }\n    }\n    setIngredientsItems=()=>{\n        const {ingredients}=this.props;\n        var tempIngredientsToShow=[];\n        var maxItemsLenght=parseInt(this.state.maxItemsPerPage*this.state.currentPage);\n        try {\n            let index = this.state.firstItemToShow;\n            do{ \n                if(maxItemsLenght>ingredients.length){\n                    maxItemsLenght=ingredients.length;\n                }\n                if(ingredients[index].name!==null   ){\n                    tempIngredientsToShow.push(ingredients[index]);\n                }\n                this.setState({\n                    ingredientsToShow:tempIngredientsToShow\n                })\n                index++;\n            }\n            while(index <maxItemsLenght);\n        } \n        catch (error) {\n            console.log('An error occurs ShowIngredients.setIngredientsItems() , but dont worried about :)');\n            console.error(error);\n        }\n    }\n    getPagination=()=>{\n        return(\n            <React.Fragment>\n                <div style={{textAlign:'center'}}>\n                    <nav id=\"pagination-bottom\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getPrevPage()} href=\"#previous\">Previous</a>\n                            </li> \n                            {\n                                this.state.totalPagination.map((index,key)=> \n                                    <li className=\"page-item page-nav\" id={`page-item-${index}`} key={key}>\n                                        <Link to={`/admin/ingredients/${index}`} className=\"page-link\" onClick={()=>this.getPage(index)}>{index}</Link>\n                                    </li>\n                                )\n                            }\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getNextPage()} href=\"#next\">Next</a>\n                            </li> \n                        </ul>\n                    </nav>\n                </div>\n            </React.Fragment>\n        )\n    }\n    render(){\n        const {ingredients}=this.props;\n        if(!ingredients){\n            return(\n                <div>\n                    <p>Loading Data From Database ,please Wait...</p>\n                </div>\n            )\n        }\n        return(\n            <React.Fragment>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-9\">\n                        <ul>\n                            {this.renderIngredients()}\n                        </ul>\n                        {this.getPagination()}\n                    </div>\n                </div> \n            </React.Fragment>\n        )\n    }\n}\nShowIngredients.propTypes={\n    getIngredients:PropTypes.func.isRequired,\n    ingredients:PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          img: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired\n}\nconst mapStateToProps=state=>({\n    ingredients:state.ingredients.ingredients\n})\nexport default withRouter(connect(mapStateToProps,{getIngredients})(ShowIngredients));","import React from 'react';\nimport {Link} from \"react-router-dom\"; \nimport {connect} from \"react-redux\"; \nimport PropTypes from 'prop-types';\nimport {openModal} from \"../../helper/modal.helper\";\nimport {setDelete} from \"../../actions/modalActions\";\n\nexport const Entree=props=>{ \n    const {id,name,price,picture} =props.info;\n    const deleteEntree=(e,id)=>{ \n        props.setDelete(id,'Appetizer'); \n        setTimeout(() => {\n            openModal(e);\n        }, 900);\n    }    \n    return(\n        <li className=\"list-group-item\" id={id}>\n            <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-8 d-flex justify-content-between align-items-center\">\n                    <p className=\"text-dark m-0\">\n                        {name}\n                    </p>\n                    <span className=\"badge badge-warning text-dark\"> $ {price}</span>\n                    <img src={picture} alt={name} className=\"responsive-img col-md-3\"/>\n                </div>\n                <div className=\"col-md-4 d-flex justify-content-end acciones\">\n                    <Link to={`/admin/edit/appetizer/${id}`} className=\"btn btn-success mr-2\">Edit</Link>\n                    <button type=\"button\" className=\"btn btn-primary ml-2\" onClick={(e)=>deleteEntree(e,id)}>Delete</button>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nEntree.propTypes = {\n    setDelete: PropTypes.func.isRequired,\n    modals:PropTypes.string.isRequired,\n    productType:PropTypes.string.isRequired,\n    idToDelete:PropTypes.string.isRequired,\n    info: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        picture:PropTypes.string.isRequired,\n    }).isRequired\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setDelete: (id,type) => dispatch(setDelete(id,type))\n    }\n}\nconst mapStateToProps=state=>({\n    modals:state.modals.modals,\n    productType:state.modals.productType,\n    idToDelete:state.modals.idToDelete\n})\nexport default connect(mapStateToProps,mapDispatchToProps)( React.memo(Entree));","import React,{Component} from 'react';\nimport {connect} from \"react-redux\";\nimport $ from 'jquery';\nimport Entree from \"../../components/view/entree\";\nimport {getEntrees} from \"../../actions/entreeActions\";\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nexport class ShowEntrees extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentPage:1,\n            totalItems:0,\n            maxItemsPerPage:4,\n            entreesToShow:[\n                {\n                    category: \"Sea Food\",\n                    description: \"A little dish with marinated meat ↵such as fish, seafood or both - in citrus dressings.\",\n                    id: \"1ENTR\",\n                    name: \"Ceviche\",\n                    picture: \"/img/entrees/ceviche.png\",\n                    price: \"6.50\"\n                },\n                {\n                    category: \"Salad\",\n                    description: \"A bed of romaine lettuce, followed ↵by grilled peppers, corn, and shrimp. Then we ↵brighten this salad up with chopped grape tomatoes, a ↵diced avocado, and cucumbers.\",\n                    id: \"2ENTR\",\n                    name: \"Grilled Shrimp Salad\",\n                    picture: \"/img/entrees/grilled-shrimp-salad.png\",\n                    price: \"7.50\"\n                }\n            ],\n            firstItemToShow:0,\n            totalPagination:[1,2]\n        }\n    }\n    \n    async componentDidMount(){\n        await this.props.getEntrees();\n        const {entrees}=this.props;\n        this.setState({\n            totalItems:entrees.length\n        });\n        const tempTotalPages=Math.ceil(this.state.totalItems/this.state.maxItemsPerPage);\n        const tempItems=[];\n        for (let index = 1; index <= tempTotalPages; index++) {\n            tempItems.push(index);\n        }\n        this.setState({\n            totalPagination:tempItems\n        });\n        this.setEntreesItems();\n    }\n    componentWillReceiveProps(nextProps) {\n        try {\n            if(nextProps.match.params.page!==null){\n                const {page}=nextProps.match.params;\n                if(isNaN(page)===false){\n                    this.setState({\n                        currentPage:page \n                    });\n                    this.getPage(page); \n                    setTimeout(() => {    \n                        document.querySelector(\"#page-item-\"+page).classList.add(\"active\");\n                    }, 1200);\n                }\n            }\n        } \n        catch (error) {\n            console.log('An error occurs in ShowEntrees.componentWillReceiveProps(),but dont worry about it :) ');\n            console.log(error);\n        }\n    }\n    renderEntrees=()=>{\n        if(this.state.entreesToShow.length===0){\n            return(\n                <div>\n                    Loading\n                </div>\n            )\n        }\n        else{\n            return(\n                this.state.entreesToShow.map(entree=>\n                    <Entree key={entree.id} info={entree}/> \n                )\n            )\n        }\n    }\n    getNextPage=()=>{ \n        try {\n            if(this.state.currentPage<this.state.totalPagination.length){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)+1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    currentPage:tempCurrentPage,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.props.history.push(\"/admin/appetizers/\"+tempCurrentPage);\n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowEntrees.getNextPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPrevPage=()=>{\n        try {\n            if(this.state.currentPage>1){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)-1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    firstItemToShow:tempFirstItemToShow,\n                    currentPage:tempCurrentPage\n                });\n                this.props.history.push(\"/admin/appetizers/\"+tempCurrentPage); \n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowEntrees.getPrevPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPage=(index)=>{\n        try {\n            const tempFirstItemToShow=(index*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n            if($('.page-nav').hasClass('active')){\n                $('.page-nav').removeClass('active');\n            }\n            setTimeout(() => {\n                $('.page-nav:nth-child('+ parseInt(index+1)+')').addClass('active');\n                this.setState({\n                    currentPage:index,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.setEntreesItems(); \n            }, 300);\n        } catch (error) {\n            console.log('An error occurs in ShowEntrees.getPage() , but dont worry about it');\n            console.log(error);\n        }\n    }\n    setEntreesItems=()=>{\n        const {entrees}=this.props;\n        const tempEntreesToShow=[];\n        let maxItemsLenght=parseInt(this.state.maxItemsPerPage*this.state.currentPage);\n        try {\n            let index = this.state.firstItemToShow;\n            do{ \n                if(maxItemsLenght>entrees.length){\n                    maxItemsLenght=entrees.length;\n                }\n                if(entrees[index].name!==null   ){\n                    tempEntreesToShow.push(entrees[index]);\n                }\n                this.setState({\n                    entreesToShow:tempEntreesToShow\n                })\n                index++;\n            }\n            while(index <=maxItemsLenght);\n        } \n        catch (error) {\n            console.log('An error occurs dont worry about');\n        }\n    }\n    getPagination=()=>{\n        return(\n            <React.Fragment>\n                <div style={{textAlign:'center'}}>\n                    <nav id=\"pagination-bottom\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getPrevPage()}  href=\"#previous\">Previous</a>\n                            </li> \n                            {\n                                this.state.totalPagination.map((index,key)=> \n                                    <li className=\"page-item page-nav\" id={`page-item-${index}`} key={key}>\n                                        <Link to={`/admin/appetizers/${index}`} className=\"page-link\" onClick={()=>this.getPage(index)}>{index}</Link>\n                                    </li>\n                                )\n                            }\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getNextPage()} href=\"#next\">Next</a>\n                            </li> \n                        </ul>\n                    </nav>\n                </div>\n            </React.Fragment>\n        )\n    }\n    \n    render(){\n        const {entrees}=this.props;\n        if(!entrees){\n            return(\n                <div>\n                    <p>Loading Data From Database ,please Wait...</p>\n                </div>\n            )\n        }\n        return(\n            <React.Fragment>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-9\">\n                        <ul>\n                        {this.renderEntrees()}\n                        {this.getPagination()}\n                        </ul>\n                    </div>\n                </div> \n            </React.Fragment>\n        )\n    }\n}\nShowEntrees.propTypes={\n    getEntrees:PropTypes.func.isRequired,\n    entrees:PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          description: PropTypes.string.isRequired,\n          picture: PropTypes.string.isRequired,\n          price: PropTypes.number.isRequired\n        }).isRequired\n    ).isRequired\n}\nconst mapStateToProps=state=>({\n    entrees:state.entrees.entrees\n})\nexport default withRouter(connect(mapStateToProps,{getEntrees})(ShowEntrees));","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport {openModal} from \"../../helper/modal.helper\";\nimport {setDelete} from \"../../actions/modalActions\";\n\nexport const Dessert=props=>{\n    const {id,name,price,picture} =props.info;\n    const deleteDessert=(e,id)=>{\n        props.setDelete(id,'Dessert'); \n       setTimeout(() => {\n           openModal(e);\n       },600);\n   }\n    return(\n        <li className=\"list-group-item\" id={id}>\n            <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-8 d-flex justify-content-between align-items-center\">\n                    <p className=\"text-dark m-0\">\n                        {name}\n                    </p>\n                    <span className=\"badge badge-warning text-dark\"> $ {price}</span>\n                    <img src={picture} alt={name} className=\"responsive-img col-md-3\"/>\n                </div>\n                <div className=\"col-md-4 d-flex justify-content-end acciones\">\n                    <Link to={`/admin/edit/dessert/${id}`} className=\"btn btn-success mr-2\">Edit</Link>\n                    <button type=\"button\" className=\"btn btn-primary ml-2\" onClick={(e)=>deleteDessert(e,id)}>Delete</button>\n                </div>\n            </div>\n        </li>\n    )\n} \nDessert.propTypes = { \n    modals: PropTypes.string,\n    productType:PropTypes.string,\n    idToDelete:PropTypes.string,\n    deleteDessert:PropTypes.func,\n    info: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        picture:PropTypes.string.isRequired,\n    }).isRequired\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setDelete: (id,type) => dispatch(setDelete(id,type))\n    }\n}\nconst mapStateToProps=state=>({\n    modals:state.modals.modals,\n    productType:state.modals.productType,\n    idToDelete:state.modals.idToDelete\n})\nexport default connect(mapStateToProps,mapDispatchToProps)( React.memo(Dessert));","import React,{Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Dessert from \"../../components/view/dessert\";\nimport {getDesserts} from \"../../actions/dessertActions\";\nimport $ from 'jquery'; \nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nexport class ShowDesserts extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentPage:1,\n            totalItems:0,\n            maxItemsPerPage:4,\n            dessertsToShow:[\n                { \n                    id: \"1DESRT\", \n                    name: \"Rice with Milk\", \n                    description: \"Sweet rice with cinnamon and sweet cream\",\n                    picture:'/img/desserts/rice-with-milk.jpg' ,\n                    price:5.50\n                },\n                { \n                    id: \"2DESRT\", \n                    name: \"Choco Strawberries\", \n                    description: \"Strawberries covered with Chocolate\", \n                    picture:'/img/desserts/choco-strawberries.jpg',\n                    price:7.50\n                },\n                { \n                    id: \"3DESRT\", \n                    name: \"Ice Cream and Caramel\", \n                    description: \"Chocolate ice cream on the crust\", \n                    picture:'/img/desserts/ice-cream-and-caramel.jpg',\n                    price:8.50\n                }\n            ],\n            firstItemToShow:0,\n            totalPagination:[1,2]\n        }\n    }\n    async componentDidMount(){\n        try {\n            await this.props.getDesserts();\n            const {desserts}= this.props;\n            this.setState({\n                totalItems:desserts.length\n            });\n            const tempTotalPages=Math.ceil(desserts.length/this.state.maxItemsPerPage);\n            const tempItems=[];\n            for (let index = 1; index <= tempTotalPages; index++) {\n                tempItems.push(index);\n            }\n            this.setState({\n                totalPagination:tempItems\n            });\n            this.setDessertsItems();\n        } catch (error) {\n            console.log('An error occurs in ShowDesserts.componentDidMount()');\n            console.log(error);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        try {\n            if(nextProps.match.params.page!==null){\n                const {page}=nextProps.match.params;\n                if(isNaN(page)===false){\n                    this.setState({\n                        currentPage:page \n                    });\n                    this.getPage(page); \n                    setTimeout(() => {    \n                        document.querySelector(\"#page-item-\"+page).classList.add(\"active\");\n                    }, 1200);\n                }\n            }\n        } \n        catch (error) {\n            console.log('An error occurs in ShowDesserts.componentWillReceiveProps(),but dont worry about it :) ');\n            console.log(error);\n        }\n    }\n    renderDesserts=()=>{\n        if(this.state.dessertsToShow.length===0){\n            return(\n                <div>\n                    Loading\n                </div>\n            )\n        }\n        else{\n            return(\n                this.state.dessertsToShow.map(dessert=>\n                    <Dessert key={dessert.id} info={dessert}/> \n                )\n            )\n        }\n    }\n    getNextPage=()=>{ \n        try {\n            if(this.state.currentPage<this.state.totalPagination.length){\n                console.log('getNextPage')\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)+1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    currentPage:tempCurrentPage,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.props.history.push(\"/admin/desserts/\"+tempCurrentPage);\n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowSDesserts.getNextPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPrevPage=()=>{\n        try {\n            if(this.state.currentPage>1){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)-1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    firstItemToShow:tempFirstItemToShow,\n                    currentPage:tempCurrentPage\n                });\n                this.props.history.push(\"/admin/desserts/\"+tempCurrentPage);\n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowSDesserts.getPrevPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPage=(index)=>{\n        try {\n            const tempFirstItemToShow=(index*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n            if($('.page-nav').hasClass('active')){\n                $('.page-nav').removeClass('active');\n            }\n            setTimeout(() => {\n                $('.page-nav:nth-child('+ parseInt(index+1)+')').addClass('active');\n                this.setState({\n                    currentPage:index,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.setDessertsItems(); \n            }, 300);\n        } catch (error) {\n            console.log('An error occurs in ShowDesserts.getPage() , but dont worry about it');\n            console.log(error);\n        }\n    }\n    setDessertsItems=()=>{\n        const {desserts}=this.props;\n        const tempDessertsToShow=[];\n        let maxItemsLenght=parseInt(this.state.maxItemsPerPage*this.state.currentPage);\n        try {\n            let index = this.state.firstItemToShow;\n            if(maxItemsLenght>desserts.length){\n                maxItemsLenght=desserts.length;\n            }\n            do{  \n                if(desserts[index].name!==null   ){\n                    tempDessertsToShow.push(desserts[index]);\n                }\n                this.setState({\n                    dessertsToShow:tempDessertsToShow\n                })\n                index++;\n            }\n            while(index <=maxItemsLenght);\n        } \n        catch (error) {\n            console.log('An error occurs in ShowDesserts.setDessertsItems() but no worried about it');\n            //console.log(error);\n        }\n    }\n    getPagination=()=>{\n        return(\n            <React.Fragment>\n                <div style={{textAlign:'center'}}>\n                    <nav id=\"pagination-bottom\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getPrevPage()} href=\"#previous\">Previous</a>\n                            </li> \n                            {\n                                this.state.totalPagination.map((index,key)=> \n                                    <li className=\"page-item page-nav\" id={`page-item-${index}`} key={key}>\n                                        <Link to={`/admin/desserts/${index}`} className=\"page-link\" onClick={()=>this.getPage(index)}>{index}</Link>\n                                    </li>\n                                )\n                            }\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getNextPage()} href=\"#next\">Next</a>\n                            </li> \n                        </ul>\n                    </nav>\n                </div>\n            </React.Fragment>\n        )\n    }\n    render(){\n        const {desserts}=this.props;\n        if(!desserts){\n            return(\n                <div>\n                    <p>Loading Data From Database ,please Wait...</p>\n                </div>\n            )\n        }\n        return(\n            <React.Fragment>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-9\">\n                        <ul>\n                            {this.renderDesserts()}\n                            {this.getPagination()}\n                        </ul>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nShowDesserts.propTypes={\n    getDesserts:PropTypes.func.isRequired,\n    desserts:PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          description: PropTypes.string.isRequired,\n          picture: PropTypes.string.isRequired,\n          price: PropTypes.number.isRequired\n        }).isRequired\n    )\n}\nconst mapStateToProps=state=>({\n    desserts:state.desserts.desserts\n})\nexport default withRouter(connect(mapStateToProps,{getDesserts})(ShowDesserts));","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport {openModal} from \"../../helper/modal.helper\";\nimport {setDelete} from \"../../actions/modalActions\";\n\nexport const Drink=props=>{\n    const {id,name,price,picture} = props.info;\n    const deleteDrink=(e,id)=>{ \n        props.setDelete(id,'Drink'); \n        setTimeout(() => {\n            openModal(e);\n        }, 900);\n    } \n    return(\n        <li className=\"list-group-item\" id={id}>\n            <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-8 d-flex justify-content-between align-items-center\">\n                    <p className=\"text-dark m-0\">\n                        {name}\n                    </p>\n                    <span className=\"badge badge-warning text-dark\"> $ {price}</span>\n                    <img src={picture} alt={name} className=\"responsive-img col-md-3\"/>\n                </div>\n                <div className=\"col-md-4 d-flex justify-content-end acciones\">\n                    <Link to={`/admin/edit/drink/${id}`} className=\"btn btn-success mr-2\">Edit</Link>\n                    <button type=\"button\" className=\"btn btn-primary ml-2\" onClick={(e)=>deleteDrink(e,id)}>Delete</button>\n                </div>\n            </div>\n        </li>\n    ) \n}\nDrink.propTypes = {\n    deleteDrink: PropTypes.func.isRequired,\n    modals:PropTypes.string.isRequired,\n    productType:PropTypes.string.isRequired,\n    idToDelete:PropTypes.string.isRequired,\n    info: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        picture:PropTypes.string.isRequired,\n    }).isRequired\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setDelete: (id,type) => dispatch(setDelete(id,type))\n    }\n}\nconst mapStateToProps=state=>({\n    modals:state.modals.modals,\n    productType:state.modals.productType,\n    idToDelete:state.modals.idToDelete\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(React.memo(Drink));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Drink from \"../../components/view/drink\";\nimport {getDrinks} from \"../../actions/drinkActions\";\nimport $ from 'jquery';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nexport class ShowDrinks extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentPage:1,\n            totalItems:0,\n            maxItemsPerPage:4,\n            drinksToShow:[\n            {   \n                description: \"Fresh Natural of Oat with Milk or water\",\n                id: \"10DRK\",\n                name: \"Fresh Natural of Oats\",\n                picture: \"/img/drinks/fresh-natural-of-oats.jpg\",\n                price: \"4.50\"\n            },\n            {   \n                description: \"Fresh Natural of Chocolate with Milk\",\n                id: \"11DRK\",\n                name: \"Fresh Natural of Chocolate\",\n                picture: \"/img/drinks/fresh-natural-of-chocolate.jpg\",\n                price: \"4.50\"\n            }\n            ],\n            firstItemToShow:0,\n            totalPagination:[1,2]\n        }\n    }\n    async componentDidMount(){\n        await this.props.getDrinks();\n        \n        const {drinks}=this.props;\n        this.setState({\n            totalItems:drinks.length\n        });\n        const tempTotalPages=Math.ceil(drinks.length/this.state.maxItemsPerPage);\n        const tempItems=[];\n        for (let index = 1; index <= tempTotalPages; index++) {\n            tempItems.push(index);\n        }\n        this.setState({\n            totalPagination:tempItems\n        });\n        this.setDrinksItems();\n    }\n    componentWillReceiveProps(nextProps) {\n        try {\n            if(nextProps.match.params.page!==null){\n                const {page}=nextProps.match.params;\n                if(isNaN(page)===false){\n                    this.setState({\n                        currentPage:page \n                    });\n                    this.getPage(page); \n                    setTimeout(() => {    \n                        document.querySelector(\"#page-item-\"+page).classList.add(\"active\");\n                    }, 1200);\n                }\n            }\n        } \n        catch (error) {\n            console.log('An error occurs in ShowDrinks.componentWillReceiveProps(),but dont worry about it :) ');\n            console.log(error);\n        }\n    }\n    renderDrinks=()=>{\n        if(this.state.drinksToShow.length===0){\n            return(\n                <div>\n                    Loading\n                </div>\n            )\n        }\n        else{\n            return(\n                this.state.drinksToShow.map(drink=>\n                    <Drink key={drink.id} info={drink}/> \n                )\n            )\n        }\n    }\n    getNextPage=()=>{ \n        try {\n            if(this.state.currentPage<this.state.totalPagination.length){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)+1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    currentPage:tempCurrentPage,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.props.history.push(\"/admin/drinks/\"+tempCurrentPage)\n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowDrinks.getNextPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPrevPage=()=>{\n        try {\n            if(this.state.currentPage>1){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)-1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    firstItemToShow:tempFirstItemToShow,\n                    currentPage:tempCurrentPage\n                });\n                this.props.history.push(\"/admin/drinks/\"+tempCurrentPage)\n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowDrinks.getPrevPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPage=(index)=>{\n        try {\n            const tempFirstItemToShow=(index*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n            if($('.page-nav').hasClass('active')){\n                $('.page-nav').removeClass('active');\n            }\n            setTimeout(() => {\n                $('.page-nav:nth-child('+ parseInt(index+1)+')').addClass('active');\n                this.setState({\n                    currentPage:index,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.setDrinksItems(); \n            }, 300);\n        } catch (error) {\n            console.log('An error occurs in ShowDrinks.getPage() , but dont worry about it');\n            console.log(error);\n        }\n    }\n    setDrinksItems=()=>{\n        const {drinks}=this.props;\n        const tempDrinksToShow=[];\n        let maxItemsLenght=parseInt(this.state.maxItemsPerPage*this.state.currentPage);\n        try {\n            let index = this.state.firstItemToShow;\n            do{ \n                if(maxItemsLenght>drinks.length){\n                    maxItemsLenght=drinks.length;\n                }\n                if(drinks[index].name!==null   ){\n                    tempDrinksToShow.push(drinks[index]);\n                }\n                this.setState({\n                    drinksToShow:tempDrinksToShow\n                })\n                index++;\n            }\n            while(index <=maxItemsLenght);\n        } \n        catch (error) {\n            console.log('An error occurs dont worry about');\n        }\n    }\n    getPagination=()=>{\n        return(\n            <React.Fragment>\n                <div style={{textAlign:'center'}}>\n                    <nav id=\"pagination-bottom\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getPrevPage()} href=\"#previous\">Previous</a>\n                            </li> \n                            {\n                                this.state.totalPagination.map((index,key)=> \n                                    <li className=\"page-item page-nav\" id={`page-item-${index}`} key={key}>\n                                        <Link to={`/admin/drinks/${index}`} className=\"page-link\" onClick={()=>this.getPage(index)}>{index}</Link>\n                                    </li>\n                                )\n                            }\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getNextPage()} href=\"#next\">Next</a>\n                            </li> \n                        </ul>\n                    </nav>\n                </div>\n            </React.Fragment>\n        )\n    }\n    render(){\n        const {drinks}=this.props;\n        if(!drinks){\n            return(\n                <div>\n                   <p>Loading Data From Database ,please Wait...</p> \n                </div>\n            )\n        }\n        return(\n            <React.Fragment>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-9\">\n                        <ul>\n                        {\n                                this.renderDrinks()\n                            }\n                            {\n                                this.getPagination()\n                            }\n                        </ul>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nShowDrinks.propTypes={\n    getDrinks:PropTypes.func.isRequired,\n    drinks:PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          description: PropTypes.string.isRequired,\n          picture: PropTypes.string.isRequired,\n          price: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired\n}\nconst mapStateToProps=state=>({\n    drinks:state.drinks.drinks\n})\nexport default withRouter(connect(mapStateToProps,{getDrinks})(ShowDrinks));","import {GET_INVOICES,SHOW_INVOICE,SHOW_ORDER_PRODUCTS} from \"../constants/invoiceTypes\";\nimport api from '../api/api';\nexport const getInvoices=()=>async dispatch=>{\n    const response = await api.get('/api/invoices/');\n    dispatch({\n        type:GET_INVOICES,\n        payload:response.data\n    })\n}\nexport const showInvoice=orderCode=>async dispatch=>{\n    const response=await api.get(`/api/invoice/show/${orderCode}`);\n    dispatch({\n        type:SHOW_INVOICE,\n        payload:response.data\n    })\n}\nexport const showOrderProducts=orderCode=>async dispatch=>{\n    const response=await api.get(`/api/invoice/show/products/${orderCode}`);\n    dispatch({\n        type:SHOW_ORDER_PRODUCTS,\n        payload:response.data\n    })\n}  ","export const GET_INVOICES='GET_INVOICES';\nexport const SHOW_INVOICE='SHOW_INVOICE';\nexport const SHOW_ORDER_PRODUCTS='SHOW_ORDER_PRODUCTS';","import React from 'react';\nimport {Link} from \"react-router-dom\"; \nimport {connect} from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nexport const Invoice =props=>{ \n    const {id_header,date_of_billing,username,email,order_code} = props.info;\n    const date=date_of_billing.replace('.000Z','');\n    return( <React.Fragment>\n        <li className=\"list-group-item\" id={id_header}>\n            <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-4 d-flex justify-content-between align-items-center\">\n                    <p className=\"text-dark m-0\">\n                        {date}\n                    </p>\n                </div>\n                <span className=\"badge badge-warning text-dark\" style={{padding:\"20px\",minWidth:\"300px\"}}> Username: {username} </span> \n                <div className=\"badge  badge-info\" style={{background:'#343a40',padding:'20px',minWidth:\"300px\"}}>\n                    Email: {email} \n                </div>\n                <div className=\"col-md-4 d-flex justify-content-end acciones\">\n                    <Link to={`/admin/edit/invoice/${order_code}`} className=\"btn btn-success mr-2\">View</Link>\n                </div>  \n                \n            </div>\n        </li> \n        </React.Fragment>\n    )\n}\nInvoice.propTypes = {  \n    info: PropTypes.shape({\n        id_header: PropTypes.number.isRequired,\n        date_of_billing: PropTypes.string.isRequired,\n        username: PropTypes.number.isRequired,\n        email:PropTypes.string.isRequired,\n        order_code:PropTypes.string.isRequired\n    }).isRequired\n}\nexport default connect(null)( React.memo(Invoice));","import React from 'react';\nimport {getInvoices} from \"../../actions/invoiceActions\";\nimport $ from 'jquery'; \nimport {connect} from \"react-redux\";\nimport Invoice from '../../components/view/invoice';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nexport class ShowInvoices extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentPage:1,\n            totalItems:0,\n            maxItemsPerPage:3,\n            invoicesToShow:[{\n                    \"id_header\":1,\n                    \"date_of_billing\":\"2019-03-12T02:30:00.000Z\",\n                    \"total\":\"15.0000\",\n                    \"subtotal\":\"14.0000\",\n                    \"sales_tax\":\"10.0000\",\n                    \"product_id\":\"3ENTR\",\n                    \"product_quantity\":2},\n                    {\n                    \"id_header\":2,\n                    \"date_of_billing\":\"2019-03-12T02:30:00.000Z\",\n                    \"total\":\"15.0000\",\n                    \"subtotal\":\"14.0000\",\n                    \"sales_tax\":\"10.0000\",\n                    \"product_id\":\"8DESRT\",\n                    \"product_quantity\":2\n            }],\n            firstItemToShow:0,\n            totalPagination:[1,2]\n        }\n        this.getPrevPage = this.getPrevPage.bind(this);\n        this.getNextPage = this.getNextPage.bind(this);\n    }\n    async componentDidMount(){\n        await this.props.getInvoices(); \n        const {invoices}= this.props;\n        try {\n            this.setState({\n                totalItems:invoices.length\n            });\n        } catch (error) {\n            console.log('An error occurs '+error);\n        }\n        const tempTotalPages=Math.ceil(this.state.totalItems/this.state.maxItemsPerPage);\n        const tempItems=[];\n        for (let index = 1; index <= tempTotalPages; index++) {\n            tempItems.push(index);\n        }\n        this.setState({\n            totalPagination:tempItems\n        });\n        this.setInvoicesItems();\n    }\n    componentWillReceiveProps(nextProps){\n        try {\n            if(nextProps.match.params.page!==null){\n                const {page}=nextProps.match.params;\n                if(isNaN(page)===false){\n                    this.setState({\n                        currentPage:page \n                    });\n                    this.getPage(page); \n                    setTimeout(() => {    \n                        document.querySelector(\"#page-item-\"+page).classList.add(\"active\");\n                    }, 1200);\n                }\n            }\n        } \n        catch (error) {\n            console.log('An error occurs in ShowDesserts.componentWillReceiveProps(),but dont worry about it :) ');\n            console.log(error);\n        }\n    }\n    renderInvoices=()=>{\n        if(this.state.invoicesToShow.length===0){\n            return(\n                <div>\n                    Loading\n                </div>\n            )\n        }\n        else{\n            return(\n                this.state.invoicesToShow.map(headerInvoice=>\n                    <Invoice key={headerInvoice.orderCode} info={headerInvoice}/> \n                )\n            )\n        }\n    }\n    getNextPage(){ \n        try {\n            if(this.state.currentPage<=this.state.totalPagination.length){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=this.state.currentPage+1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    currentPage:tempCurrentPage,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.props.history.push(\"/admin/invoices/\"+tempCurrentPage);\n            }\n        } catch (error) {\n            console.log('An error occurs in ShowInvoices,getNextPage()');\n            console.log(error);\n        }\n    }\n    getPrevPage(){\n        try {\n            if(this.state.currentPage>1){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=this.state.currentPage-1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    firstItemToShow:tempFirstItemToShow,\n                    currentPage:tempCurrentPage\n                });\n                this.props.history.push(\"/admin/invoices/\"+tempCurrentPage);\n            }\n        } catch (error) {\n            console.log('An error occurs in ShowInvoices.getPrevPage()');\n            console.log(error);\n        }\n    }\n    getPage=(index)=>{\n        try {\n            const tempFirstItemToShow=(index*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n            if($('.page-nav').hasClass('active')){\n                $('.page-nav').removeClass('active');\n            }\n            setTimeout(() => {\n                $('.page-nav:nth-child('+ parseInt(index+1)+')').addClass('active');\n                this.setState({\n                    currentPage:index,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.setInvoicesItems(); \n            }, 300);\n        } \n        catch (error) {\n            console.log('An error occurs in ShowInvoices.getPage()');\n            console.log(error);\n        }\n    }\n    setInvoicesItems= ()=>{\n        const {invoices}=this.props;\n        const tempInvoicesToShow=[];\n        let maxItemsLenght=parseInt(this.state.maxItemsPerPage*this.state.currentPage);\n        const _this=this;\n        try {\n            let index = this.state.firstItemToShow;\n            if(maxItemsLenght>invoices.length){\n                maxItemsLenght=invoices.length;\n            }\n            do{ \n                if(invoices[index]!==undefined){\n                        tempInvoicesToShow.push(invoices[index]);\n                }\n                _this.setState({\n                    invoicesToShow:tempInvoicesToShow\n                })\n                index++;\n            }\n            while(index <maxItemsLenght);\n        } \n        catch (error) {\n            console.log('An error occurs in setInvoicesItems');\n            console.error(error);\n        }\n    }\n    getPagination=()=>{\n        return(\n            <React.Fragment>\n                <div style={{textAlign:'center'}}>\n                    <nav id=\"pagination-bottom\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getPrevPage()} href=\"#previous\">Previous</a>\n                            </li> \n                            {\n                                this.state.totalPagination.map((index,key)=> \n                                    <li className=\"page-item page-nav\">\n                                        <Link to={`/admin/invoices/${index}`} className=\"page-link\" onClick={()=>this.getPage(index)}>{index}</Link>\n                                    </li>\n                                )\n                            }\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getNextPage()} href=\"#next\">Next</a>\n                            </li> \n                        </ul>\n                    </nav>\n                </div>\n            </React.Fragment>\n        )\n    }\n    render(){\n        const {invoices}=this.props;\n        if(!invoices){\n            return(\n                <div>\n                    <p>Loading Data From Database ,please Wait...</p>\n                </div>\n            )\n        }\n        return(\n            <React.Fragment>\n                <ul>\n                    {this.renderInvoices()}\n                </ul>\n                {this.getPagination()}\n            </React.Fragment>\n        )\n    }\n}\nShowInvoices.propTypes={\n    getInvoices:PropTypes.func.isRequired,\n    invoices:PropTypes.arrayOf(\n        PropTypes.shape({\n          order_code: PropTypes.string.isRequired,\n          email: PropTypes.string.isRequired,\n          date_of_billing: PropTypes.string.isRequired,\n          username: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired\n}\nconst mapStateToProps=state=>({\n    invoices:state.invoices.invoices\n})\nexport default withRouter(connect(mapStateToProps,{getInvoices})(ShowInvoices));\n","import {SHOW_USERS,SHOW_USER,EDIT_USER,ADD_USER,DELETE_USER} from \"../constants/userTypes\";\nimport api from '../api/api';\nexport  const getUsers=()=>async dispatch=>{\n    const response = await api.get('/api/users');\n    dispatch({\n        type:SHOW_USERS,\n        payload:response.data\n    })\n}\nexport const addUser=user=>async dispatch=>{\n    const response = await api.post('/api/user/add/',user);\n    dispatch({\n        type:ADD_USER,\n        payload:response.data\n    })\n}\nexport const deleteUser =id=>async dispatch=>{\n    await api.delete(`/api/user/delete/${id}`);\n    dispatch({\n        type:DELETE_USER,\n        payload:id\n    })\n}\nexport const showUser=id=>async dispatch=>{\n    const response=await api.get(`/api/user/show/${id}`);\n    dispatch({\n        type:SHOW_USER,\n        payload:response.data\n    })\n}\nexport const editUser=user=>async dispatch=>{\n    const response = await api.put(`/api/user/update/${user.id}`,user);\n    dispatch({\n        type:EDIT_USER,\n        payload:response.data\n    })\n}","export const SHOW_USERS='SHOW_USERS';\nexport const SHOW_USER='SHOW_USER';\nexport const EDIT_USER='EDIT_USER';\nexport const ADD_USER='ADD_USER';\nexport const DELETE_USER='DELETE_USER';","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {deleteUser} from \"../../actions/userActions\";\nimport PropTypes from 'prop-types';\nexport const User =props=>{ \n    /* deletingUser=()=>{\n        const id=this.props.info.id;\n        try {\n            if (!(window.confirm('Are you sure you want to delete this User?'))){\n                console.log('Dont Delete User');\n            }\n            else{\n                this.props.deleteUser(id);\n                setTimeout(() => {\n                    window.location.reload();\n                }, 1200);\n            }\n        } catch (error) {\n            console.log('An error occurs in User.deletingUser()');\n            console.error(error);\n        }\n        setTimeout(() => {\n            window.location.reload();\n        }, 1200);\n    } */ \n    const {id,email} = props.info;\n    return(\n        <li className=\"list-group-item\" id={id}>\n            <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-8 d-flex justify-content-between align-items-center\">\n                    <span className=\"badge badge-warning text-dark\">Email:  {email}</span>\n                </div>\n                <div className=\"col-md-4 d-flex justify-content-end acciones\">\n                    <Link to={`/admin/edit/user/${id}`} className=\"btn btn-success mr-2\">Edit</Link>\n                    {/* <button type=\"button\" className=\"btn btn-primary ml-2\" onClick={()=>deletingUser(id)}>Delete</button> */}\n                </div>\n            </div>\n        </li>\n    ) \n}\nUser.propTypes = {\n    deleteUser: PropTypes.func.isRequired,\n    info: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired\n    }).isRequired\n}\nconst mapStateToProps=state=>({\n    users:state.users.users\n})\nexport default connect(mapStateToProps,{deleteUser})(React.memo(User));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {getUsers} from \"../../actions/userActions\";\nimport User from \"../../components/view/user\";\nimport $ from 'jquery';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nexport class ShowUsers extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentPage:1,\n            totalItems:0,\n            maxItemsPerPage:3,\n            usersToShow:[\n                {\n                    \"id\":1,\n                    \"firstname\":\"Leonardo\",\n                    \"lastname\":\"Aranibar\",\n                    \"username\":\"LeonardoAranibarSanchez\",\n                    \"about\":\"I am Web Developer\",\n                    \"email\":\"laranibarsanchez@gmail.com\",\n                    \"password\":\"NWqJg5p5FCFAIvxTvS\",\n                    \"last_login\":\"2019-07-21T20:43:01.000Z\",\n                    \"updated_at\":null,\n                    \"created_at\":null,\n                    \"status\":\"active\",\n                    \"provider\":\"google\",\n                    \"id_user\":\"\"\n                }\n            ],\n            firstItemToShow:0,\n            totalPagination:[1,2]\n        }\n    }\n    async componentDidMount(){ \n        await this.props.getUsers();\n        const {users}=this.props;\n        this.setState({\n            totalItems:users.length\n        }); \n        const tempTotalPages=Math.ceil(users.length/this.state.maxItemsPerPage);\n        const tempItems=[];\n        for (let index = 1; index <= tempTotalPages; index++) {\n            tempItems.push(index);\n        }\n        this.setState({\n            totalPagination:tempItems\n        });  \n        this.setUsersItems();\n    }\n    componentWillReceiveProps(nextProps) {\n        try {\n            if(nextProps.match.params.page!==null){\n                const {page}=nextProps.match.params;\n                if(isNaN(page)===false){\n                    this.setState({\n                        currentPage:page \n                    });\n                    this.getPage(page); \n                    setTimeout(() => {    \n                        document.querySelector(\"#page-item-\"+page).classList.add(\"active\");\n                    }, 1200);\n                }\n            }\n        } \n        catch (error) {\n            console.log('An error occurs in ShowUsers.componentWillReceiveProps(),but dont worry about it :) ');\n            console.log(error);\n        }\n    }\n    renderUsers=()=>{\n        if(this.state.usersToShow.length===0){\n            return(\n                <div>\n                    Loading\n                </div>\n            )\n        }\n        else{\n            return(\n                this.state.usersToShow.map(user=>\n                    <User key={user.id} info={user}/> \n                )\n            )\n        }\n    }\n    getNextPage=()=>{ \n        try {\n            if(this.state.currentPage<this.state.totalPagination.length){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)+1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    currentPage:tempCurrentPage,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.props.history.push(\"/admin/users/\"+tempCurrentPage)\n            }\n        } catch (error) {\n            console.log(\"An error occurs in ShowUsers.getNextPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPrevPage=()=>{\n        try {\n            if(this.state.currentPage>1){\n                if($('.page-nav').hasClass('active')){\n                    $('.page-nav').removeClass('active');\n                }\n                const tempCurrentPage=parseInt(this.state.currentPage)-1;\n                const tempFirstItemToShow=(tempCurrentPage*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n                this.setState({\n                    firstItemToShow:tempFirstItemToShow,\n                    currentPage:tempCurrentPage\n                });\n                this.props.history.push(\"/admin/users/\"+tempCurrentPage);\n            } \n        } catch (error) {\n            console.log(\"An error occurs in ShowUsers.getPrevPage(),but dont worry about it :)\");\n            console.log(error);\n        }\n    }\n    getPage=(index)=>{\n        try {\n            const tempFirstItemToShow=(index*this.state.maxItemsPerPage)-parseInt(this.state.maxItemsPerPage);\n            if($('.page-nav').hasClass('active')){\n                $('.page-nav').removeClass('active');\n            }\n            setTimeout(() => {\n                $('.page-nav:nth-child('+ parseInt(index+1)+')').addClass('active');\n                this.setState({\n                    currentPage:index,\n                    firstItemToShow:tempFirstItemToShow\n                });\n                this.setUsersItems(); \n            }, 200);\n        } catch (error) {\n            console.log('An error occurs in ShowUsers.getPage() , but dont worry about it');\n            console.log(error);\n        }\n    }\n    setUsersItems=()=>{\n        const {users}=this.props;\n        const tempUsersToShow=[];\n        let maxItemsLenght=parseInt(this.state.maxItemsPerPage*this.state.currentPage);\n        try {\n            let index = this.state.firstItemToShow;\n            do{ \n                if(maxItemsLenght>users.length){\n                    maxItemsLenght=users.length;\n                }\n                if(users[index].name!==null){\n                    tempUsersToShow.push(users[index]);\n                }\n                this.setState({\n                    usersToShow:tempUsersToShow\n                })\n                index++;\n            }\n            while(index <=maxItemsLenght);\n        } \n        catch (error) {\n            console.log('An error occurs in ShowUsers.setUsersItems(), but dont worried about :)');\n            console.log(error);\n        }\n    }\n    getPagination=()=>{\n        return(\n            <React.Fragment>\n                <div style={{textAlign:'center'}}>\n                    <nav id=\"pagination-bottom\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getPrevPage()} href=\"#previous\">Previous</a>\n                            </li> \n                            {\n                                this.state.totalPagination.map((index,key)=> \n                                    <li className=\"page-item page-nav\" id={`page-item-${index}`} key={key}>\n                                        <Link to={`/admin/users/${index}`} className=\"page-link\" onClick={()=>this.getPage(index)}>{index}</Link>\n                                    </li>\n                                )\n                            }\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" onClick={()=>this.getNextPage()} href=\"#next\">Next</a>\n                            </li> \n                        </ul>\n                    </nav>\n                </div>\n            </React.Fragment>\n        )\n    }\n    render(){\n        const {users}=this.props;\n        if(!users){\n            return(\n                <div>\n                    <p>Loading Data From Database ,please Wait...</p>\n                </div>\n            )\n        }\n        return(\n            <React.Fragment>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-9\">\n                        <ul>\n                            {this.renderUsers()}\n                            {this.getPagination()}\n                        </ul>\n                    </div>\n                </div> \n            </React.Fragment>\n        )\n    }\n}\nShowUsers.propTypes={\n    getUsers:PropTypes.func.isRequired,\n    users:PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            firstname: PropTypes.string.isRequired,\n            lastname: PropTypes.string.isRequired,\n            username: PropTypes.string.isRequired,\n            about: PropTypes.string,\n            email: PropTypes.string.isRequired,\n            password: PropTypes.string,\n            last_login: PropTypes.string,\n            updated_at: PropTypes.string,\n            created_at:PropTypes.string,\n            status:PropTypes.string,\n            provider:PropTypes.string,\n            id_user:PropTypes.string\n        }).isRequired\n    ).isRequired\n}\nconst mapStateToProps=state=>({\n    users:state.users.users\n})\nexport default withRouter(connect(mapStateToProps,{getUsers})(ShowUsers));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {showStrongDish,editStrongDish,updateStrongDish,getStrongsDishes} from \"../../actions/strongDishActions\";\nimport {getIngredientsByDishId,deleteIngredientDish} from \"../../actions/ingredientByDishActions\";\nimport {setDishId,setAddIngredient,setNextIdDishIngredient} from '../../actions/modalActions';\nimport {openModal} from '../../helper/modal.helper';\nimport api from '../../api/api';\nimport PropTypes from 'prop-types';\nclass EditStrongDish extends React.PureComponent{\n    constructor(){\n        super();\n        this.state={\n                id:'',\n                name:'',\n                description:'',\n                picture:'',\n                category:'',\n                price:'',\n                error:false,\n                changedPicture:false,\n                ingredientsByDish:[],\n                isLoadig:true \n        }\n    }\n    onAddIngredient=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        this.props.setAddIngredient();\n        setTimeout(() => {\n            openModal(e);\n        }, 700);\n    }   \n    componentDidMount=async()=>{\n        const {id}=this.props.match.params;\n        this.props.getStrongsDishes();\n        this.props.showStrongDish(id);\n        this.props.setDishId(id);\n        this.props.getIngredientsByDishId(id);\n        const _this=this;\n        await api.get('/api/ingredient-to-dish/count/')\n        .then((res)=>{\n            if(res.data.maxIngredientDishId){\n                var nextIdIngDish=parseInt(res.data.maxIngredientDishId)+1;\n                _this.props.setNextIdDishIngredient(nextIdIngDish)\n            }\n        }) \n        setTimeout(() => {\n            if(this.props.strongDish!==null){\n                const {id, name,price,description,category,picture}=this.props.strongDish;\n                this.setState({\n                    id,\n                    name,\n                    description,\n                    category,\n                    picture,\n                    price,\n                    isLoadig:false\n                })\n            } \n        }, 350); \n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.ingredientsByDish !== prevState.ingredientsByDish) {\n          return({ ingredientsByDish: nextProps.ingredientsByDish });\n        }\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    } \n    pictureDish=(e)=>{\n        e.preventDefault();\n        if(e.target.files[0]!==null){\n            this.setState({\n                picture:e.target.files[0],\n                changedPicture:true\n            });  \n        }\n    } \n    editStrongDish=(e)=>{   \n        if(e){\n            e.preventDefault();\n        }\n        const { id , name, description, price, category, picture, changedPicture } =this.state;\n        const formData=new FormData();\n        if(name===''||price===''||description===''||category===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            const infoDish={\n                id:id,\n                name:name,\n                price:price,\n                description:description,\n                category:category,\n                picture:picture\n            }\n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('price',price);\n            formData.append('description',description);\n            formData.append('picture',picture);\n            formData.append('category',category); \n            try {\n                if(changedPicture===false){ \n                    this.props.editStrongDish(infoDish,id) \n                }\n                else{\n                     this.props.updateStrongDish(formData,id)\n                }\n                if(this.props.ingredientsByDish.length>0 ){\n                    this.saveIngredients(); \n                }\n            } catch (error) {\n                console.log('An error occurs in EditStrongDish.editStrongDish');\n                console.log(error);\n            }\n            finally{ \n                setTimeout(() => {\n                    this.props.history.push('/admin/main-courses'); \n                }, 3900); \n            }\n        }\n    }\n    saveIngredients=async()=>{\n        this.props.ingredientsByDish.forEach(async(ing) =>{\n            await api.post('/api/ingredient-to-dish/add/',ing)\n            .then((res)=>{\n                console.log(res);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        });\n    }\n    deleteIngredientDish=(e,ing)=>{\n        if(e){\n            e.preventDefault();\n        }\n        this.props.deleteIngredientDish(ing.id_ingredient_dish);\n    }\n    getIngredientsByDish=()=>{\n        if(this.state.ingredientsByDish.length>0 ){\n            return(\n                <React.Fragment>\n                    <h1>Ingredients</h1>\n                    <button id=\"add-ingredient\" className=\"btn btn-success\" \n                        onClick={(e)=>this.onAddIngredient(e)}>\n                            Add Ingredient\n                    </button>\n                    <div className=\"ingredients-container\">\n                        {this.state.ingredientsByDish.map(ing=>\n                            <div className=\"ing-box\">\n                                <button className=\"btn btn-delete\" onClick={(e)=>this.deleteIngredientDish(e,ing)}>X</button>\n                                <h5>{ing.name}</h5>\n                                <img src={ing.img} alt={ing.name} style={{maxWidth:'130px',float:'left',margin:'10px',maxHeight:'80px'}}/>\n                            </div>\n                        )}\n                    </div>\n                </React.Fragment>\n            )\n        }  \n        else{\n            return(\n                <React.Fragment>\n                    <button id=\"add-ingredient\" className=\"btn btn-success\" \n                        onClick={(e)=>this.onAddIngredient(e)}>\n                            Add Ingredient\n                    </button>\n                    <p>No Ingredients</p>       \n                </React.Fragment>\n            )\n        }    \n    }\n    render(){\n        const {id,picture,name,description,price,category}=this.state;\n        return(\n            (this.state.isLoadig===true)?<p>Loading Data, Please wait...</p>:<React.Fragment>\n                <div className=\"row justify-content-center mt-5\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h2 className=\"text-center\">Edit a Main Course</h2>\n                                <form encType=\"multipart/form-data\" onSubmit={this.editStrongDish} \n                                    id=\"form-strong-dish-update\">\n                                    <div className=\"form-group\">\n                                        <label>Name</label>\n                                        <input type=\"text\" defaultValue={id} \n                                        onChange={this.onChange} style={{display:'none'}}\n                                        name=\"id\"/>\n                                        <input type=\"text\" value={name} onChange={this.onChange} \n                                        className=\"form-control\" placeholder=\"Name\"\n                                        name=\"name\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Description</label>\n                                        <textarea type=\"text\" value={description} \n                                        onChange={this.onChange} className=\"form-control\" \n                                        placeholder=\"Description\"\n                                        name=\"description\" \n                                        ></textarea>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Picture</label>\n                                        <input type=\"file\" id=\"picture_upload\"  \n                                        onChange={(e)=>this.pictureDish(e)} className=\"form-control-file\"\n                                        placeholder=\"Picture\" />\n                                        {\n                                            (this.state.changedPicture===false)?<img src={picture} style={{maxWidth:'400px'}} alt={name}/>:''\n                                        } \n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Category</label>\n                                        <input type=\"text\" value={category} \n                                        onChange={this.onChange} className=\"form-control\"\n                                        placeholder=\"Category\" \n                                        name=\"category\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Price</label>\n                                        <input type=\"text\" value={price} \n                                        onChange={this.onChange} \n                                        className=\"form-control\"\n                                        placeholder=\"Price\" \n                                        name=\"price\"\n                                        />\n                                    </div>\n                                    {this.getIngredientsByDish()}\n                                    {this.state.error ? \n                                    <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                        All the fields are required\n                                    </div>\n                                    :''\n                                    }\n                                    <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Update</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nEditStrongDish.propTypes = {\n    deleteIngredientDish: PropTypes.func.isRequired,\n    setNextIdDishIngredient: PropTypes.func.isRequired,\n    setDishId: PropTypes.func.isRequired,\n    setAddIngredient: PropTypes.func.isRequired,\n    getIngredientsByDishId: PropTypes.func.isRequired,\n    showStrongDish: PropTypes.func.isRequired,\n    editStrongDish: PropTypes.func.isRequired,\n    updateStrongDish: PropTypes.func.isRequired,\n    getStrongsDishes: PropTypes.func.isRequired,\n    modals:PropTypes.object\n}\nconst mapStateToProps=state=>({\n    strongDish:state.strongsDishes.strongDish,\n    strongsDishes:state.strongsDishes.strongsDishes,\n    ingredientsByDish:state.ingredientsByDish.ingredientsByDish,\n    idDish:state.modals.idDish,\n    nextIdDishIngredient:state.modals.nextIdDishIngredient,\n    modals:state.modals.modals,\n})\nexport default connect(mapStateToProps,{deleteIngredientDish,setNextIdDishIngredient,\n    setDishId,setAddIngredient,getIngredientsByDishId,\n    showStrongDish,editStrongDish,\n    updateStrongDish,getStrongsDishes})(EditStrongDish);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {showIngredient,editIngredient,updateIngredient,getIngredients} from \"../../actions/ingredientActions\";\nimport PropTypes from 'prop-types';\nexport class EditIngredient extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            img:'',\n            name:'',\n            error:false,\n            changedPicture:false\n        }\n    }\n    componentDidMount(){\n        const {id}=this.props.match.params;\n        this.props.getIngredients();\n        this.props.showIngredient(id);\n    }\n    componentWillReceiveProps(nextProps,nextState){\n        if(nextProps.ingredient){\n            const {id, name,img}=nextProps.ingredient;\n            this.setState({\n                id,\n                name,\n                img\n            }) \n        } \n    }\n    onChange=(e)=>{ \n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    } \n    imgIngredient=(e)=>{\n        if(e.target.files[0]!==null){\n            this.setState({\n                img:e.target.files[0],\n                changedPicture:true\n            });\n        }\n    }\n    editIngredient=(e)=>{ \n        e.preventDefault();\n        const {\n            id ,\n            name,\n            img,\n            changedPicture\n        } =this.state;\n        const formData=new FormData(),\n        _this=this;\n        if(name===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            const infoIngredient={\n                id ,\n                name,\n                img\n            }\n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('img',img);\n            if(changedPicture===false){\n                this.props.editIngredient(infoIngredient,id);\n            } \n            else{\n                this.props.updateIngredient(formData,id);\n            }\n            setTimeout(() => {\n                _this.props.getIngredients();\n                _this.props.history.push('/admin/ingredients');\n            }, 900);\n        }\n    }\n    render(){\n        const {name,img,error} = this.state;\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Edit Ingredient</h2>\n                            <form onSubmit={(e)=>this.editIngredient(e)} id=\"form-update-ingredient\">\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" defaultValue={this.state.id} \n                                    onChange={this.onChange} style={{display:'none'}}\n                                     name=\"id\"/>\n                                    <input type=\"text\" defaultValue={name} onChange={this.onChange} \n                                    className=\"form-control\" placeholder=\"Name\"\n                                    name=\"name\"\n                                     />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Picture</label>\n                                    <input type=\"file\" id=\"picture_upload\" defaultValue={img} \n                                    onChange={this.imgIngredient} className=\"form-control-file\"\n                                     placeholder=\"Picture\" />\n                                    <img src={img} style={{maxWidth:'400px'}} alt={name}/> \n                                    <input type=\"text\" defaultValue={img} className=\"form-control-file\"\n                                    readOnly=\"readonly\" name=\"img\" id=\"picture_hidden\" style={{display:\"none\"}}/>\n                                </div>\n                            {error ? \n                            <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                All the fields are required\n                            </div>\n                            :''\n                            }\n                                <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Update</button>\n                            </form>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nEditIngredient.propTypes = {\n    showIngredient: PropTypes.func.isRequired,\n    editIngredient: PropTypes.func.isRequired,\n    updateIngredient: PropTypes.func.isRequired, \n    getIngredients: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    ingredient:state.ingredients.ingredient,\n    ingredients:state.ingredients.ingredients\n})\nexport default connect(mapStateToProps,{showIngredient,editIngredient,\n    updateIngredient,getIngredients})(EditIngredient);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {showEntree,updateEntree,editEntree,getEntrees} from \"../../actions/entreeActions\";\nimport {getIngredientsByDishId,deleteIngredientDish} from \"../../actions/ingredientByDishActions\";\nimport {setDishId,setAddIngredient,setNextIdDishIngredient} from '../../actions/modalActions';\nimport {openModal} from '../../helper/modal.helper';\nimport api from '../../api/api';\nimport PropTypes from 'prop-types';\nexport class EditEntree extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            name:'',\n            description:'',\n            picture:'',\n            category:'',\n            price:'',\n            error:false,\n            changedPicture:false,\n            ingredientsByDish:[],\n            isLoadig:true \n        }\n    }\n    onAddIngredient=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        this.props.setAddIngredient();\n        setTimeout(() => {\n            openModal(e);\n        }, 500);\n    } \n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    } \n    componentDidMount=async()=>{\n        const {id}=this.props.match.params;\n        this.props.getEntrees();\n        this.props.showEntree(id);\n        this.props.setDishId(id);\n        this.props.getIngredientsByDishId(id);\n        const _this=this;\n        await api.get('/api/ingredient-to-dish/count/')\n        .then((res)=>{\n            if(res.data.maxIngredientDishId){\n                const nextIdIngDish=parseInt(res.data.maxIngredientDishId)+1;\n                _this.props.setNextIdDishIngredient(nextIdIngDish)\n            }\n        })\n        setTimeout(() => { \n            if(this.props.entree!==null){\n                const {id, name,price,description,category,picture}=this.props.entree;\n                this.setState({\n                    id,\n                    name,\n                    description,\n                    category,\n                    picture,\n                    price,\n                    isLoadig:false\n                })\n            }\n        }, 350);\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.ingredientsByDish !== prevState.ingredientsByDish) {\n          return({ ingredientsByDish: nextProps.ingredientsByDish });\n        }\n    }\n    pictureEntree=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        if(e.target.files[0]!==null){\n            this.setState({\n                picture:e.target.files[0],\n                changedPicture:true\n            });\n        }\n    }\n    editEntree=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        const {id ,name,description,price,category,picture,changedPicture} =this.state;\n        const formData=new FormData();\n        if(name===''||price===''||description===''||category===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            const infoEntree={id,name,price,description,category,picture}\n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('price',price);\n            formData.append('description',description);\n            formData.append('picture',picture);\n            formData.append('category',category);\n            try {\n                if(changedPicture===false){\n                    this.props.editEntree(infoEntree,id);\n                }\n                else{\n                    this.props.updateEntree(formData,id);\n                }\n                if(this.props.ingredientsByDish.length>0 ){\n                    this.saveIngredients(); \n                }\n            } catch (error) {\n                console.log('An error occurs in EditEntree.editEntree');\n                console.log(error);\n            }\n            finally{\n                setTimeout(() => { \n                    this.props.history.push('/admin/appetizers/');\n                },2900);\n            }\n        }\n    }\n    saveIngredients=async()=>{\n        this.props.ingredientsByDish.forEach(async(ing) =>{\n            await api.post('/api/ingredient-to-dish/add/',ing)\n            .then((res)=>{\n                console.log(res);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        });\n    }\n    deleteIngredientDish=(e,ing)=>{\n        if(e){\n            e.preventDefault();\n        }\n        this.props.deleteIngredientDish(ing.id_ingredient_dish);\n    }\n    getIngredientsByDish=()=>{\n            if(this.state.ingredientsByDish.length>0 ){\n                return(\n                    <React.Fragment>\n                        <h1>Ingredients</h1>\n                        <button id=\"add-ingredient\" className=\"btn btn-success\" \n                            onClick={(e)=>this.onAddIngredient(e)}>\n                                Add Ingredient\n                        </button>\n                        <div className=\"ingredients-container\">\n                            {this.state.ingredientsByDish.map(ing=>\n                                <div className=\"ing-box\">\n                                    <button className=\"btn btn-delete\" onClick={(e)=>this.deleteIngredientDish(e,ing)}>X</button>\n                                    <h5>{ing.name}</h5>\n                                    <img src={ing.img} alt={ing.name} style={{maxWidth:'130px',float:'left',margin:'10px',maxHeight:'80px'}}/>\n                                </div>\n                            )}\n                        </div>\n                    </React.Fragment>\n                )\n            }  \n            else{\n                return(\n                    <React.Fragment>\n                        <button id=\"add-ingredient\" className=\"btn btn-success\" \n                            onClick={(e)=>this.onAddIngredient(e)}>\n                                Add Ingredient\n                        </button>\n                        <p>No Ingredients</p>       \n                    </React.Fragment>\n                )\n            }    \n    }\n    render(){\n        const {name,price,description,category,picture,error} = this.state;\n        return(\n            (this.state.isLoadig===true)?<p>Loading Data, Please wait...</p>:<React.Fragment>\n                <div className=\"row justify-content-center mt-5\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h2 className=\"text-center\">Edit Appetizer</h2>\n                                <form onSubmit={this.editEntree} id=\"form-entree-update\" >\n                                    <div className=\"form-group\">\n                                        <label>Name</label>\n                                        <input type=\"text\" defaultValue={this.state.id} \n                                        onChange={this.onChange} className=\"\" style={{display:'none'}}\n                                        name=\"id\"/>\n                                        <input type=\"text\" defaultValue={name} \n                                        onChange={this.onChange} \n                                        className=\"form-control\" placeholder=\"Name\"\n                                        name=\"name\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label style={{width:'100%'}}>Description</label> \n                                        <textarea  value={description} className=\"form-control\" name=\"description\"\n                                        onChange={this.onChange} ></textarea>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Picture</label>\n                                        <input type=\"file\" id=\"picture_upload\" onChange={(e)=>this.pictureEntree(e)} className=\"form-control-file\"\n                                        placeholder=\"Picture\" /> \n                                        {\n                                                (this.state.changedPicture===false)?<img src={picture} style={{maxWidth:'400px'}} alt={name}/>:''\n                                        }\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Category</label>\n                                        <input type=\"text\" defaultValue={category} \n                                        onChange={this.onChange} className=\"form-control\"\n                                        placeholder=\"Category\" \n                                        name=\"category\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Price</label>\n                                        <input type=\"text\" defaultValue={price} \n                                        onChange={this.onChange} \n                                        className=\"form-control\"\n                                        placeholder=\"Price\" \n                                        name=\"price\"\n                                        />\n                                    </div>\n                                {this.getIngredientsByDish()}\n                                {error ? \n                                <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                    All the fields are required\n                                </div>\n                                :''\n                                }\n                                    <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Update</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nEditEntree.propTypes = {\n    deleteIngredientDish: PropTypes.func.isRequired,\n    setNextIdDishIngredient: PropTypes.func.isRequired,\n    setDishId: PropTypes.func.isRequired,\n    setAddIngredient: PropTypes.func.isRequired,\n    getIngredientsByDishId: PropTypes.func.isRequired,\n    showEntree: PropTypes.func.isRequired,\n    editEntree: PropTypes.func.isRequired,\n    updateEntree: PropTypes.func.isRequired,\n    getEntrees: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    entree:state.entrees.entree,\n    entrees:state.entrees.entrees,\n    ingredientsByDish:state.ingredientsByDish.ingredientsByDish,\n    idDish:state.modals.idDish,\n    nextIdDishIngredient:state.modals.nextIdDishIngredient\n})\nexport default connect(mapStateToProps,{deleteIngredientDish,setNextIdDishIngredient,\n    setDishId,setAddIngredient,getIngredientsByDishId,\n    showEntree,updateEntree,editEntree,getEntrees})(EditEntree);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {showDessert,editDessert,updateDessert,getDesserts} from \"../../actions/dessertActions\";\nimport {getIngredientsByDishId,deleteIngredientDish} from \"../../actions/ingredientByDishActions\";\nimport {setDishId,setAddIngredient,setNextIdDishIngredient} from '../../actions/modalActions';\nimport {openModal} from '../../helper/modal.helper';\nimport api from '../../api/api';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router\";\nexport class EditDessert extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            name:'',\n            description:'',\n            picture:'',\n            price:'',\n            pictureName:'',\n            error:false,\n            changedPicture:false,\n            ingredientsByDish:[],\n            isLoadig:true \n        }\n    }\n    onAddIngredient=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        this.props.setAddIngredient();\n        setTimeout(() => {\n            openModal(e);\n        }, 500);\n    } \n    componentDidMount=async()=>{\n        try {\n            const _this=this; \n            const {id}=this.props.match.params;\n            this.props.getDesserts();\n            this.props.showDessert(id);\n            this.props.setDishId(id);\n            this.props.getIngredientsByDishId(id);\n            await api.get('/api/ingredient-to-dish/count/')\n            .then((res)=>{\n                if(res.data.maxIngredientDishId){\n                    const nextIdIngDish=parseInt(res.data.maxIngredientDishId)+1;\n                    _this.props.setNextIdDishIngredient(nextIdIngDish)\n                }\n            })\n            setTimeout(() => {\n                if(this.props.dessert){\n                    const {id, name,price,description,picture}=this.props.dessert;\n                    this.setState({\n                        id,\n                        name,\n                        description,\n                        picture,\n                        price,\n                        isLoadig:false\n                    })\n                }\n            }, 350);\n        } catch (error) {\n            console.log('An error occurs in EditDessert.componentDidMount()');\n        }\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.ingredientsByDish !== prevState.ingredientsByDish) {\n          return({ ingredientsByDish: nextProps.ingredientsByDish });\n        }\n    }\n    pictureDessert=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        if(e.target.files[0]!==null){\n            this.setState({\n                picture:e.target.files[0],\n                changedPicture:true,\n                pictureName:e.target.files[0].name\n            }); \n        } \n    }\n    onChange=(e)=>{ \n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    } \n    editDessert=(e)=>{   \n        if(e){\n            e.preventDefault(); \n        }\n        const { id , name, description, price, picture, changedPicture } =this.state;\n        const formData=new FormData();\n        if(name===''||price===''||description===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            const infoDessert={\n                id,\n                name,\n                price,\n                description,\n                picture\n            }\n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('price',price);\n            formData.append('description',description);\n            formData.append('picture',picture);\n            try {\n                if(changedPicture===false){ \n                    this.props.editDessert(infoDessert,id);\n                }\n                else{\n                    this.props.updateDessert(formData,id);\n                }\n                if(this.props.ingredientsByDish.length>0 ){\n                    this.saveIngredients(); \n                }\n            } catch (error) {\n                console.log('An error occurs in EditDessert.editDessert');\n                console.log(error);\n            }\n            setTimeout(() => { \n                this.props.history.push('/admin/desserts/');\n            }, 1900);\n        }\n    }\n    saveIngredients=async()=>{\n        this.props.ingredientsByDish.forEach(async(ing) =>{\n            await api.post('/api/ingredient-to-dish/add/',ing)\n            .then((res)=>{\n                console.log(res);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        });\n    }\n    deleteIngredientDish=(e,ing)=>{\n        e.preventDefault();\n        this.props.deleteIngredientDish(ing.id_ingredient_dish);\n    }\n    getIngredientsByDish=()=>{\n            if(this.state.ingredientsByDish.length>0 ){\n                return(\n                    <React.Fragment>\n                        <h1>Ingredients</h1>\n                        <button id=\"add-ingredient\" className=\"btn btn-success\" \n                            onClick={(e)=>this.onAddIngredient(e)}>\n                                Add Ingredient\n                        </button>\n                        <div className=\"ingredients-container\">\n                            {this.state.ingredientsByDish.map(ing=>\n                                <div className=\"ing-box\">\n                                    <button className=\"btn btn-delete\" onClick={(e)=>this.deleteIngredientDish(e,ing)}>X</button>\n                                    <h5>{ing.name}</h5>\n                                    <img src={ing.img} alt={ing.name} style={{maxWidth:'130px',float:'left',margin:'10px',maxHeight:'80px'}}/>\n                                </div>\n                            )}\n                        </div>\n                    </React.Fragment>\n                )\n            }  \n            else{\n                return(\n                    <React.Fragment>\n                        <button id=\"add-ingredient\" className=\"btn btn-success\" \n                            onClick={(e)=>this.onAddIngredient(e)}>\n                                Add Ingredient\n                        </button>\n                        <p>No Ingredients</p>       \n                    </React.Fragment>\n                )\n            }    \n    }\n    render(){\n        const {name,price,description,picture,error} = this.state;\n        return(\n            (this.state.isLoadig===true)?<p>Loading Data, Please wait...</p>:<React.Fragment>\n                <div className=\"row justify-content-center mt-5\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h2 className=\"text-center\">Edit Dessert</h2>\n                                <form onSubmit={this.editDessert} id=\"form-dessert-update\">\n                                    <div className=\"form-group\">\n                                        <label>Name</label>\n                                        <input type=\"text\" defaultValue={this.state.id} \n                                        onChange={this.onChange} className=\"\" style={{display:'none'}}\n                                        name=\"id\"/>\n                                        <input type=\"text\" defaultValue={name} onChange={(e)=>this.onChange(e)} \n                                        className=\"form-control\" placeholder=\"Name\"\n                                        name=\"name\" data-testid=\"name-dessert\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Description</label>\n                                        <input type=\"text\" defaultValue={description} \n                                        onChange={(e)=>this.onChange(e)} className=\"form-control\" \n                                        placeholder=\"Description\"\n                                        name=\"description\" data-testid=\"description-dessert\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Picture</label>\n                                        <input type=\"file\" id=\"picture_upload\" data-testid=\"picture-dessert\" \n                                        onChange={(e)=>this.pictureDessert(e)} \n                                        className=\"form-control-file\" placeholder=\"Picture\" />\n                                        {\n                                                (this.state.changedPicture===false)?<img src={picture} style={{maxWidth:'400px'}} alt={name}/>:''\n                                        }\n                                        {this.state.pictureName && (\n                                                <div id=\"picture_uploaded\">\n                                                    You have uploaded a file named {this.state.pictureName}\n                                                </div>\n                                        )} \n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Price</label>\n                                        <input type=\"text\" defaultValue={price}  \n                                        onChange={(e)=>this.onChange(e)} \n                                        className=\"form-control\" placeholder=\"Price\" \n                                        name=\"price\"  data-testid=\"price-dessert\"/>\n                                    </div>\n                                    {this.getIngredientsByDish()}\n                                {error ? \n                                <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                    All the fields are required\n                                </div>\n                                :''\n                                }\n                                    <button data-testid=\"btn-submit\" type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Update</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nEditDessert.propTypes = {\n    clearIngredientsByDish: PropTypes.func.isRequired,\n    deleteIngredientDish: PropTypes.func.isRequired,\n    setNextIdDishIngredient: PropTypes.func.isRequired,\n    setDishId: PropTypes.func.isRequired,\n    setAddIngredient: PropTypes.func.isRequired,\n    getIngredientsByDishId: PropTypes.func.isRequired,\n    showDessert: PropTypes.func.isRequired,\n    editDessert: PropTypes.func.isRequired,\n    updateDessert: PropTypes.func.isRequired,\n    getDesserts: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    dessert:state.desserts.dessert,\n    desserts:state.desserts.desserts,\n    ingredientsByDish:state.ingredientsByDish.ingredientsByDish,\n    idDish:state.modals.idDish,\n    nextIdDishIngredient:state.modals.nextIdDishIngredient\n})\nexport default withRouter(connect(mapStateToProps,{deleteIngredientDish,setNextIdDishIngredient,\n    setDishId,setAddIngredient,\n    getIngredientsByDishId,showDessert,editDessert,\n    updateDessert,getDesserts})(EditDessert));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {showDrink,editDrink,updateDrink,getDrinks} from \"../../actions/drinkActions\";\nimport PropTypes from 'prop-types';\nexport class EditDrink extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            name:'',\n            description:'',\n            picture:'', \n            price:'',\n            error:false,\n            changedPicture:false\n        }\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    } \n    componentDidMount(){\n        const {id}=this.props.match.params;\n        this.props.getDrinks();\n        this.props.showDrink(id);\n    }\n    componentWillReceiveProps(nextProps,nextState){\n        if(nextProps.drink){\n            const {id, name,price,description,picture}=nextProps.drink;\n            this.setState({\n                id,\n                name,\n                description, \n                picture,\n                price\n            })\n        }\n    } \n    pictureDrink=(e)=>{\n        if(e){\n            e.preventDefault();\n        }\n        if(e.target.files[0]!==null){\n            this.setState({\n                picture:e.target.files[0],\n                changedPicture:true\n            });   \n        }\n    } \n    editDrink=(e)=>{ \n        e.preventDefault();   \n        const { id ,name,description,price,picture,changedPicture} =this.state;\n        const formData=new FormData()\n        if(name===''||price===''||description===''){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            const infoDrink={ id, name, price, description,  picture};\n            formData.append('id',id);\n            formData.append('name',name);\n            formData.append('price',price);\n            formData.append('description',description);\n            formData.append('picture',picture); \n            try {\n                if(changedPicture===false){\n                    this.props.editDrink(infoDrink,id);\n                }\n                else{\n                    this.props.updateDrink(formData,id);\n                }\n            } catch (error) {\n                console.log('An error occurs in EditDrink.editDrink');\n                console.log(error);\n            }\n            finally{\n                setTimeout(() => {\n                    this.props.getDrinks();\n                    this.props.history.push('/admin/drinks/');\n                }, 1200);\n            }\n        }\n    }\n    render(){\n        const {name,price,description,picture,error} = this.state;\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Edit Drink</h2>\n                            <form encType=\"multipart/form-data\" onSubmit={this.editDrink} \n                            id=\"form-drink-update\">\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" defaultValue={this.state.id} \n                                    onChange={this.onChange} className=\"\" style={{display:'none'}}\n                                     name=\"id\"/>\n                                    <input type=\"text\" defaultValue={name} \n                                    onChange={(e)=>this.onChange(e)} \n                                    className=\"form-control\" placeholder=\"Name\"\n                                    name=\"name\"\n                                     />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Description</label>\n                                    <input type=\"text\" defaultValue={description} \n                                    onChange={(e)=>this.onChange(e)} \n                                    className=\"form-control\" \n                                    placeholder=\"Description\"\n                                    name=\"description\" \n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Picture</label>\n                                    <input type=\"file\" id=\"picture_upload\" defaultValue={picture} \n                                    onChange={(e)=>this.pictureDrink(e)} className=\"form-control-file\"\n                                     placeholder=\"Picture\" />\n                                    <img src={picture} style={{maxWidth:'400px'}} alt={name}/>\n                                    <input type=\"text\" defaultValue={picture} className=\"form-control-file\"\n                                    readonly=\"readonly\" name=\"picture\" id=\"picture_hidden\" style={{display:\"none\"}}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Price</label>\n                                    <input type=\"text\" defaultValue={price} \n                                    onChange={(e)=>this.onChange(e)} \n                                    className=\"form-control\"\n                                     placeholder=\"Price\" \n                                     name=\"price\"\n                                     />\n                                </div>\n                            {error ? \n                            <div className=\"font-weight-bold alert-danger text-center mt-4\">\n                                All the fields are required\n                            </div>\n                            :''\n                            }\n                                <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Update</button>\n                            </form>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nEditDrink.propTypes = {\n    showDrink: PropTypes.func.isRequired,\n    editDrink: PropTypes.func.isRequired,\n    updateDrink: PropTypes.func.isRequired,\n    getDrinks: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    drink:state.drinks.drink,\n    drinks:state.drinks.drinks\n})\nexport default connect(mapStateToProps,{showDrink,editDrink,updateDrink,getDrinks})(EditDrink);","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {showInvoice,showOrderProducts,getInvoices} from \"../../actions/invoiceActions\";\nimport history from '../../history';\nimport PropTypes from 'prop-types';\nclass EditInvoice extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            invoice:{\n                orderCode:'',\n                email:'',\n                dateOfBilling:'',\n                username:''\n            }\n        };\n    }\n    componentDidMount=()=>{\n        const {order_code}=this.props.match.params;\n        this.props.showInvoice(order_code);\n        this.props.showOrderProducts(order_code);\n    }\n    componentWillReceiveProps(nextProps,nextState){\n        if(nextProps.invoice){\n            const {order_code, email,date_of_billing,username}=nextProps.invoice[0];\n            this.setState({\n                invoice:{\n                    order_code,\n                    email,\n                    date_of_billing,\n                    username\n                }\n            })\n        }\n    }\n    renderOrder=()=>{\n        let totalPrice=0;\n        if(this.props.orderProducts){\n            this.props.orderProducts.forEach(product => {\n                totalPrice+=parseFloat(product.total)\n            });\n            return( \n                <div className=\"table-responsive\">\n                    <table className=\"table\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th>Product Name</th>\n                                <th>Quantity per Product</th>\n                                <th>Pricer per Quantity</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.props.orderProducts.map((order)=>\n                                        <tr>\n                                            <td>{order.product_name}</td>\n                                            <td>{order.product_quantity}</td>\n                                            <td>{order.total}</td>\n                                        </tr>\n                                )\n                            }\n                            <tr className='total-row'>\n                                <td colSpan=\"2\">\n                                    <p style={{color:'#fff'}}>Total :</p>\n                                </td>\n                                <td>\n                                    <p style={{color:'#fff'}}>{totalPrice}</p>\n                                </td>\n                            </tr>\n                        </tbody>        \n                    </table>\n                </div>\n            )\n            \n        }\n        else{\n            return(\n                <React.Fragment>\n                    Loading\n                </React.Fragment>\n            )\n        }\n    }\n    goBack=(e)=>{\n        e.preventDefault();\n        history.push('/admin/invoices')\n    }\n    shouldComponentUpdate(nextProps, nextState){\n        if(nextProps.invoice[0].username!==this.state.invoice.username){\n            this.setState({\n                invoice:{\n                    username:nextProps.invoice[0].username,\n                    email:nextProps.invoice[0].email,\n                    orderCode:nextProps.invoice[0].orderCode,\n                    dateOfBilling:nextProps.invoice[0].dateOfBilling\n                }\n            })\n        } \n        return true;\n    }\n    render(){\n        const {order_code,email,date_of_billing} = this.state.invoice;\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Invoice #{order_code}</h2>\n                            {/* <form onSubmit={(e)=>this.editInvoice(e)} id=\"form-update-ingredient\"> */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"order_code\" className=\"lbl-form\">Order Code:</label>\n                                    <input type=\"text\" defaultValue={order_code} \n                                     readOnly id=\"order_code\"\n                                     name=\"order_code\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\" className=\"lbl-form\">Email</label>\n                                    <input type=\"text\" defaultValue={email} \n                                     readOnly id=\"email\"\n                                     name=\"email\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"date_of_billing\" className=\"lbl-form\">Date of Billing</label>\n                                    <input type=\"text\" defaultValue={date_of_billing} \n                                     readOnly\n                                     name=\"date_of_billing\" id=\"date_of_billing\"/>\n                                </div>\n                                {this.renderOrder()}\n                                <button className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\" onClick={(e)=>this.goBack(e)}>Back</button>\n                                {/* <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Update</button> */}\n                            {/* </form> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nEditInvoice.propTypes = {\n    showInvoice: PropTypes.func.isRequired,\n    showOrderProducts: PropTypes.func.isRequired,\n    getInvoices: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    invoice:state.invoices.invoice,\n    orderProducts:state.invoices.orderProducts,\n    invoices:state.invoices.invoices\n})\nexport default connect(mapStateToProps,{showInvoice,showOrderProducts,getInvoices})(EditInvoice);;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {getIngredients} from '../../actions/ingredientActions';\nimport {addIngredientToDishFromModal,updateIngredientToDish} from '../../actions/ingredientByDishActions';\nimport {setNextIdDishIngredient} from '../../actions/modalActions';\nimport {closeModal} from '../../helper/modal.helper';\nimport api from '../../api/api';\nimport PropTypes from 'prop-types';\nexport class AddIngredientToDish extends React.PureComponent{\n    state={\n        ingredientsToAdd:[],\n        ingredientSelected:'',\n        dishSelected:'',\n        nextIdDishIngredient:0\n    }\n     componentDidMount=async()=>{\n        await this.props.getIngredients();  \n        const _this=this;\n        setTimeout(() => {\n            _this.setState({\n                ingredientsToAdd:_this.props.ingredients,\n                dishSelected:_this.props.idDish\n            })\n        }, 900); \n    }\n    componentWillReceiveProps(nextProps,nextState) {\n        if(nextProps.idDish!==this.state.dishSelected){\n            this.setState({\n                dishSelected:nextProps.idDish\n            })\n        }\n        if(nextProps.nextIdDishIngredient!==this.state.nextIdDishIngredient){\n            this.setState({\n                nextIdDishIngredient:nextProps.nextIdDishIngredient\n            })\n        } \n    }\n    onChangeIngredient=(e)=>{\n        e.preventDefault();\n        const idIngredient=e.target.value; \n        const _this=this;\n        if(idIngredient!=='none'){\n            api.get('/api/ingredient/show/'+idIngredient)\n            .then((res)=>{\n                const tempIngredientSelected=res.data\n                _this.setState({\n                    ingredientSelected:{\n                        id_ingredient_dish:this.state.nextIdDishIngredient,\n                        id_ingredient:tempIngredientSelected.id,\n                        id_dish:this.state.dishSelected,\n                        name:tempIngredientSelected.name,\n                        img:tempIngredientSelected.img,\n                    }\n                })\n            }) \n        }\n    }\n    onSubmit=(e)=>{  \n        e.preventDefault();\n        const selectDish=document.querySelector(\"#select-add-ingredient-to-dish\"); \n        try {\n            if(this.state.ingredientSelected!==null&&selectDish.value!=='none'){\n                if(typeof this.props.ingredientsByDish!=='undefined'){\n                    this.props.updateIngredientToDish(this.state.ingredientSelected);\n                }\n                else{\n                    this.props.addIngredientToDishFromModal(this.state.ingredientSelected);\n                } \n                closeModal(e);\n                setTimeout(() => {\n                    this.props.getIngredients();\n                    this.props.setNextIdDishIngredient(parseInt(this.state.nextIdDishIngredient)+1);\n                }, 400);\n            }\n        } catch (error) {\n            console.log('An error occurs in AddIngredientToDish.onSubmit()');\n            console.log(error);\n        }\n    }\n    render(){\n        if(this.state.ingredientsToAdd.length>0){\n            return(\n                <React.Fragment>\n                    <div id=\"addIngredientForm\">\n                        <label htmlFor=\"select-add-ingredient-to-dish\" style={{float:'left'}}>Please Select One Ingredient</label>\n                        <select onChange={this.onChangeIngredient} id=\"select-add-ingredient-to-dish\">\n                                <option id=\"selected\" value=\"none\">Select One Ingredient</option>\n                                {this.state.ingredientsToAdd.map(function(item, i){\n                                    return <option key={i} value={item.id}>{item.name}</option>\n                                })}\n                        </select>\n                        {\n                            this.state.ingredientSelected ? <div id=\"img-selected\">\n                                <img src={this.state.ingredientSelected.img} alt={this.state.ingredientSelected.name} style={{maxWidth:'230px',float:'left'}}/>\n                            </div> :''\n                        }\n                        <button onClick={this.onSubmit}  className=\"btn btn-success\" form=\"addIngredientForm\">Add to Dish</button>\n                    </div>\n                </React.Fragment>\n            )\n        }\n        else{\n            return(\n                <React.Fragment>\n                </React.Fragment>\n            )\n        }\n    }\n}\nAddIngredientToDish.propTypes = {\n    getIngredients: PropTypes.func.isRequired,\n    addIngredientToDishFromModal: PropTypes.func.isRequired,\n    setNextIdDishIngredient: PropTypes.func.isRequired, \n    updateIngredientToDish: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({ \n    ingredientsByDish:state.ingredientsByDish.ingredientsByDish,\n    ingredients:state.ingredients.ingredients,\n    idDish:state.modals.idDish,\n    nextIdDishIngredient:state.modals.nextIdDishIngredient\n})\nexport default connect(mapStateToProps,{getIngredients,addIngredientToDishFromModal,setNextIdDishIngredient,updateIngredientToDish})(AddIngredientToDish)","import React from 'react';\nimport {connect} from 'react-redux';\nimport {closeModal} from '../../helper/modal.helper';\nimport {deleteDessert,getDesserts} from \"../../actions/dessertActions\";\nimport {deleteDrink,getDrinks} from \"../../actions/drinkActions\";\nimport {deleteEntree,getEntrees} from \"../../actions/entreeActions\";\nimport {deleteIngredient,getIngredients} from \"../../actions/ingredientActions\";\nimport {deleteStrongDish,getStrongsDishes} from \"../../actions/strongDishActions\"\nimport PropTypes from 'prop-types'; \nconst Delete = props=>{\n    const deleteProduct=()=>{ \n        const id=props.idToDelete;\n        if(props.productType==='Dessert'){\n            props.deleteDessert(id);\n            props.getDesserts();\n        }\n        else if(props.productType==='Drink'){\n            props.deleteDrink(id);\n            props.getDrinks()\n        } \n        else if(props.productType==='Appetizer'){\n            props.deleteEntree(id);\n            props.getEntrees();\n        }\n        else if(props.productType==='Ingredient'){\n            props.deleteIngredient(id);\n            props.getIngredients();\n        }\n        else if(props.productType==='Main Course'){\n            props.deleteStrongDish(id);\n            props.getStrongsDishes();\n        }\n        try {\n            setTimeout(() => {\n                window.location.reload();\n            }, 2000);\n        } catch (error) {\n            console.log('An error occurs in Delete.deleteProduct()');\n        } \n    }\n    const dontDelete=(e)=>{\n        if(e){\n            e.preventDefault()\n        }\n        closeModal(e);\n    } \n    return(\n        <React.Fragment>\n            <button className=\"btn btn-primary\" onClick={(e)=>{dontDelete(e)}} id=\"btn-dont-delete\">No</button>\n            <button className=\"btn btn-success\" onClick={()=>{deleteProduct()}} id=\"btn-delete\">Yes</button>\n        </React.Fragment>\n    ) \n} \nDelete.propTypes = {\n    modals: PropTypes.string,\n    idDish: PropTypes.string,\n    productType: PropTypes.string,\n    idToDelete: PropTypes.string,\n    desserts:PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n          description: PropTypes.string,\n          picture: PropTypes.string,\n          price: PropTypes.number\n        })\n    ),\n    drinks:PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n          description: PropTypes.string,\n          picture: PropTypes.string,\n          price: PropTypes.string\n        })\n    ),\n    entrees:PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n          description: PropTypes.string,\n          picture: PropTypes.string,\n          price: PropTypes.number\n        })\n    ),\n    ingredients:PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n          img: PropTypes.string\n        })\n    ),\n    strongsDishes:PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            description: PropTypes.string,\n            picture: PropTypes.string,\n            price: PropTypes.number\n        })\n    )\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteDrink: (id) => dispatch(deleteDrink(id)),\n        deleteDessert: (id) => dispatch(deleteDessert(id)),\n        deleteEntree:(id)=>dispatch(deleteEntree(id)),\n        deleteIngredient:(id)=>dispatch(deleteIngredient(id)),\n        deleteStrongDish:(id)=>dispatch(deleteStrongDish(id)),\n        getDesserts:()=>dispatch(getDesserts()),\n        getDrinks:()=>dispatch(getDrinks()),\n        getEntrees:()=>dispatch(getEntrees()),\n        getIngredients:()=>dispatch(getIngredients()),\n        getStrongsDishes:()=>dispatch(getStrongsDishes())\n    }\n}\nconst mapStateToProps=state=>({\n    modals:state.modals.modals,\n    idDish:state.modals.idDish,\n    productType:state.modals.productType,\n    idToDelete:state.modals.idToDelete,\n    desserts:state.desserts.desserts,\n    drinks:state.drinks.drinks,\n    entrees:state.entrees.entrees,\n    ingredients:state.ingredients.ingredients,\n    strongsDishes:state.strongsDishes.strongsDishes\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(Delete);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {closeModal} from '../helper/modal.helper';\nimport AddIngredientToDish from \"./add/AddIngredientToDish\"\nimport PropTypes from 'prop-types';\nimport Delete from \"./delete/delete\";\nconst Modal =props=>{\n    let ModalContent=<p>Modal Content</p>;\n        let titleModal=<h1>Title Modal</h1>;\n        if(props.modals==='addIngredient'){\n            titleModal=<h1>Add Ingredients</h1>;\n            ModalContent=<AddIngredientToDish/>;\n        }\n        else if(props.modals==='delete'){\n            titleModal=<h1>Are you sure you want to Delete this {props.productType}</h1>;\n            ModalContent=<Delete/>;\n        }\n        return(\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" data-testid=\"modal\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <div className=\"modal-title\">{titleModal}</div>\n                            <button type=\"button\" className=\"close\" \n                                data-dismiss=\"modal\" aria-label=\"Close\" \n                                onClick={(e)=>closeModal(e)}>\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        {ModalContent}\n                    </div>\n                </div>\n            </div>\n        )\n} \nModal.propTypes = {\n    modals: PropTypes.string,\n    productType: PropTypes.string\n}\nconst mapStateToProps=state=>({ \n    modals:state.modals.modals,\n    productType:state.modals.productType\n})\nexport default connect(mapStateToProps)(React.memo(Modal));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {showUser,editUser,getUsers} from \"../../actions/userActions\";\nimport PropTypes from 'prop-types';\nclass EditUser extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            firstname:'',\n            lastname:'',\n            username:'',\n            about:'',\n            email:'',\n            password:'',\n            retypePassword:'',\n            error:false,\n        }\n    }\n    componentDidMount=async()=>{\n        const {id}=this.props.match.params;\n        this.props.showUser(id);\n    }\n    componentWillReceiveProps(nextProps,nextState){\n        if(nextProps.user){\n            const {\n                id,\n                firstname,\n                lastname,\n                username,\n                about,\n                email,\n               // password,\n            }=nextProps.user;\n            this.setState({\n                id,\n                firstname,\n                lastname,\n                username,\n                about,\n                email,\n                //password,\n            })\n        }\n    }\n    onChange=(e)=>{ \n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    } \n    editUser=(e)=>{\n        e.preventDefault();\n        const {\n            id,\n            firstname,\n            lastname,\n            username,\n            about,\n            email,\n            password,\n            retypePassword\n        }=this.state;\n        const _this=this;\n        if(username===''||firstname===''||email===''||password===''||username===''||lastname===''\n            || password!==retypePassword){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            const infoUser={\n                id,\n                firstname,\n                lastname,\n                username,\n                about,\n                email,\n                password\n            }\n            this.props.editUser(infoUser);\n            this.props.getUsers();\n            setTimeout(() => {\n                _this.props.history.push('/admin/users/');\n            },900);\n        }\n    }\n    render(){\n        const {\n            id,\n            firstname,\n            lastname,\n            username,\n            about,\n            email,\n            error,\n            password,\n            retypePassword\n        }=this.state;\n        let errorMessage=<div className=\"font-weight-bold alert-danger text-center mt-4\">\n            All the fields are required except About\n        </div>;\n        if(password!==retypePassword){\n            errorMessage=<div className=\"font-weight-bold alert-danger text-center mt-4\">\n            All the fields are required except About<br/>\n            The password Should be the same in Re-type Password Field\n        </div>;\n        }\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Edit User</h2>\n                            <form onSubmit={this.editUser} id=\"form-entree-update\" >\n                                <div className=\"form-group\">\n                                    <label>First Name</label>\n                                    <input type=\"text\" defaultValue={id} \n                                    onChange={this.onChange}  style={{display:'none'}}\n                                     name=\"id\"/>\n                                    <input type=\"text\" defaultValue={firstname} onChange={this.onChange} \n                                    className=\"form-control\" placeholder=\"First Name\"\n                                    name=\"firstname\"\n                                     />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label style={{width:'100%'}}>Last Name</label> \n                                    <input type=\"text\" defaultValue={lastname} className=\"form-control\"\n                                    onChange={this.onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Username</label>\n                                    <input type=\"text\" defaultValue={username} className=\"form-control\"\n                                     name=\"username\" id=\"username\" onChange={this.onChange}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>About</label>\n                                    <textarea type=\"text\" defaultValue={about} \n                                    onChange={this.onChange} className=\"form-control\"\n                                     placeholder=\"About\" \n                                     name=\"about\" ></textarea>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"text\" defaultValue={email} \n                                    onChange={this.onChange} \n                                    className=\"form-control\"\n                                     placeholder=\"Email\" \n                                     name=\"email\"\n                                     />\n                                </div> \n                                <div className=\"form-group\">\n                                    <label>Password</label>\n                                    <input type=\"password\" \n                                    onChange={this.onChange} \n                                    className=\"form-control\"\n                                     placeholder=\"Password\" \n                                     name=\"password\"\n                                     />\n                                </div> \n                                <div className=\"form-group\">\n                                    <label>Re-type Password</label>\n                                    <input type=\"password\" \n                                    onChange={this.onChange} \n                                    className=\"form-control\"\n                                     placeholder=\"Password\" \n                                     name=\"retypePassword\"\n                                     />\n                                </div> \n                                \n                            {error ? \n                            errorMessage\n                            :''\n                            }\n                                <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Update</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nEditUser.propTypes = {\n    showUser: PropTypes.func.isRequired,\n    editUser: PropTypes.func.isRequired,\n    getUsers: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n    user:state.users.user,\n    users:state.users.users\n})\nexport default connect(mapStateToProps,{showUser,editUser,getUsers})(EditUser);","import React from 'react';\nimport api from \"../../api/api\";\nimport {connect} from \"react-redux\";\nimport {addUser,getUsers} from \"../../actions/userActions\";\nimport PropTypes from 'prop-types';\nclass AddUser extends React.PureComponent{\n    constructor(props){\n        super(props);\n        this.state={\n            id:0,\n            firstname:'',\n            lastname:'',\n            username:'',\n            about:'',\n            email:'',\n            password:'',\n            retypePassword:'',\n            error:false,\n        }\n    }\n    componentDidMount=async()=>{\n        let idUser=0,totalOfItems=0,_this=this;\n        await api.get('/api/count-users')\n            .then(response => {\n                totalOfItems=response.data.MaxIdUser;\n                console.log(totalOfItems);\n                \n            }).then(()=>{\n                idUser=parseInt(totalOfItems)+1;//console.log(idString); \n            })\n            .catch(error => {\n                console.log(error);\n        });\n        setTimeout(() => {\n            _this.setState({\n                id:idUser\n            });\n            console.log('this.state.id '+this.state.id);\n        }, 300);\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    } \n    submitAddUser=(e)=>{\n        e.preventDefault();\n        const {\n            id,\n            firstname,\n            lastname,\n            username,\n            about,\n            email,\n            password,\n            retypePassword\n        }=this.state;\n        const _this=this;\n        if(username===''||firstname===''||email===''||password===''||username===''||lastname===''\n            || password!==retypePassword){\n            this.setState({\n                error:true\n            });\n        }\n        else{\n            this.setState({\n                error:false\n            });\n            const infoUser={\n                id,\n                firstname,\n                lastname,\n                username,\n                about,\n                email,\n                password\n            }\n            this.props.addUser(infoUser);\n            this.props.getUsers();\n            setTimeout(() => {\n                _this.props.history.push('/admin/users/');\n            },900);\n        }\n    }\n    render(){\n        const { error,id,password,retypePassword}=this.state;\n        let errorMessage=<div className=\"font-weight-bold alert-danger text-center mt-4\">\n            All the fields are required except About\n        </div>;\n        if(password!==retypePassword){\n            errorMessage=<div className=\"font-weight-bold alert-danger text-center mt-4\">\n            All the fields are required except About<br/>\n            The password Should be the same in Re-type Password Field\n            </div>;\n        }\n        return(\n            <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center\">Add New User</h2>\n                            <form onSubmit={this.submitAddUser} id=\"form-entree-update\" >\n                                <div className=\"form-group\">\n                                    <label>First Name</label>\n                                    <input type=\"text\" defaultValue={id} \n                                    onChange={this.onChange}  style={{display:'none'}}\n                                     name=\"id\"/>\n                                    <input type=\"text\" onChange={this.onChange} \n                                    className=\"form-control\" placeholder=\"First Name\"\n                                    name=\"firstname\"\n                                     />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label style={{width:'100%'}}>Last Name</label> \n                                    <input type=\"text\" className=\"form-control\" name=\"lastname\"\n                                    onChange={this.onChange} placeholder=\"Last Name\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Username</label>\n                                    <input type=\"text\" className=\"form-control\"\n                                     name=\"username\" id=\"username\" placeholder=\"Username\" onChange={this.onChange}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>About</label>\n                                    <input type=\"text\"  \n                                    onChange={this.onChange} className=\"form-control\"\n                                     placeholder=\"About Me\" \n                                     name=\"about\"\n                                     />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"text\" onChange={this.onChange} \n                                    className=\"form-control\"\n                                     placeholder=\"Email\" \n                                     name=\"email\"\n                                     />\n                                </div> \n                                <div className=\"form-group\">\n                                    <label>Password</label>\n                                    <input type=\"password\" \n                                    onChange={this.onChange} \n                                    className=\"form-control\"\n                                     placeholder=\"Password\" \n                                     name=\"password\"\n                                     />\n                                </div> \n                                <div className=\"form-group\">\n                                    <label>Re-type Password</label>\n                                    <input type=\"password\" \n                                    onChange={this.onChange} \n                                    className=\"form-control\"\n                                     placeholder=\"Password\" \n                                     name=\"retypePassword\"\n                                     />\n                                </div>\n                            {error ? \n                            errorMessage\n                            :''\n                            }\n                                <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Create</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAddUser.propTypes = {\n    addUser: PropTypes.func.isRequired,\n    getUsers: PropTypes.func.isRequired,\n}\nconst mapStateToProps=state=>({\n    users:state.users.users\n})\nexport default connect(mapStateToProps,{addUser,getUsers})(AddUser);","import React from 'react';\nimport Header from \"./Header\";\nimport AddStrongDish from \"./add/AddStrongDish\";\nimport AddEntree from \"./add/AddEntree\";\nimport AddIngredient from \"./add/AddIngredient\";\nimport AddDessert from \"./add/AddDessert\";\nimport AddDrink from \"./add/AddDrink\";\nimport ShowStrongsDishes from \"../containers/show/ShowStrongsDishes\";\nimport ShowIngredients from \"../containers/show/ShowIngredients\";\nimport ShowEntrees from \"../containers/show/ShowEntrees\";\nimport ShowDesserts from \"../containers/show/ShowDesserts\";\nimport ShowDrinks from \"../containers/show/ShowDrinks\";\nimport ShowInvoices from \"../containers/show/ShowInvoices\";\nimport ShowUsers from \"../containers/show/ShowUsers\";\nimport EditStrongDish from \"./edit/EditStrongDish\";\nimport EditIngredient from \"./edit/EditIngredient\";\nimport EditEntree from \"./edit/EditEntree\";\nimport EditDessert from \"./edit/EditDessert\";\nimport EditDrink from \"./edit/EditDrink\";\nimport EditInvoice from \"./edit/EditInvoice\";\nimport {Router,Route,Switch} from \"react-router-dom\";\nimport history from '../history';\nimport Modal from \"./Modal\";\nimport EditUser from './edit/EditUser';\nimport AddUser from './add/AddUser';\nconst App =()=> { \n    return (\n      <React.Fragment>\n          <Router history={history}>\n            <React.Fragment>\n                <Header/>\n                <div className=\"container\">\n                  <Switch>\n                      <Route exact path=\"/admin/\" \n                      render={() => <ShowStrongsDishes/>}\n                      />\n                      <Route exact path=\"/admin/users\" component={ShowUsers}/>\n                      <Route exact path=\"/admin/users/:page\" component={ShowUsers}/>\n                      <Route exact path=\"/admin/edit/user/:id\" component={EditUser}/>\n                      <Route exact path=\"/admin/add/user\" component={AddUser}/>\n                      \n                      <Route exact path=\"/admin/main-courses\" component={ShowStrongsDishes}/>\n                      <Route exact path=\"/admin/main-courses/:page\" component={ShowStrongsDishes}/>\n                      <Route exact path=\"/admin/add/main-course\" component={AddStrongDish}/>\n                      <Route exact path=\"/admin/edit/main-course/:id\" component={EditStrongDish}/>\n\n                      <Route exact path=\"/admin/appetizers\" render={() => <ShowEntrees/>}/>\n                      <Route exact path=\"/admin/appetizers/:page\" component={ShowEntrees}/>\n                      <Route exact path=\"/admin/add/appetizer\" component={AddEntree}/>\n                      <Route exact path=\"/admin/edit/appetizer/:id\" component={EditEntree}/>\n\n                      <Route exact path=\"/admin/ingredients\" render={() => <ShowIngredients/>} />\n                      <Route exact path=\"/admin/ingredients/:page\" component={ShowIngredients} />\n                      <Route exact path=\"/admin/add/ingredient\" component={AddIngredient}/>\n                      <Route exact path=\"/admin/edit/ingredient/:id\" component={EditIngredient}/>\n\n                      <Route exact path=\"/admin/desserts\" render={() => <ShowDesserts/>}/>\n                      <Route exact path=\"/admin/desserts/:page\" component={ShowDesserts}/>\n                      <Route exact path=\"/admin/add/dessert\" component={AddDessert}/>\n                      <Route exact path=\"/admin/edit/dessert/:id\" component={EditDessert}/>\n\n                      <Route exact path=\"/admin/drinks\" render={() => <ShowDrinks/>}/>\n                      <Route exact path=\"/admin/drinks/:page\" component={ShowDrinks}/>\n                      <Route exact path=\"/admin/add/drink\" component={AddDrink}/>\n                      <Route exact path=\"/admin/edit/drink/:id\" component={EditDrink}/>\n\n                      <Route exact path=\"/admin/invoices\" render={() => <ShowInvoices/>}/>\n                      <Route exact path=\"/admin/invoices/:page\" component={ShowInvoices}/>\n                      <Route exact path=\"/admin/edit/invoice/:order_code\" component={EditInvoice}/>\n                  </Switch>  \n                </div>\n            </React.Fragment>\n          </Router>\n          <Modal/>\n      </React.Fragment>\n    );\n} \nexport default  React.memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { EDIT_INGREDIENT,SHOW_INGREDIENTS, \n    DELETE_INGREDIENT,ADD_INGREDIENT,\n    SHOW_INGREDIENT} from \"../constants/ingredientTypes\";\nconst initialState={\n    ingredients:[]\n}\nexport default function ingredientsReducer(state=initialState,action){\n    switch (action.type) {\n        case SHOW_INGREDIENTS:\n            return{\n                ...state,\n                ingredients:action.payload\n            }\n        \n        case DELETE_INGREDIENT:\n        return{\n            ...state,\n            ingredients:state.ingredients.filter(ingredient=>ingredient!==action.payload)\n        }\n        case ADD_INGREDIENT:\n            return{\n                ...state,\n                ingredients:[...state.ingredients,action.payload]\n            }\n        case SHOW_INGREDIENT:\n            return {\n                ...state,\n                ingredient:action.payload\n            }\n        case EDIT_INGREDIENT:\n            return{\n                ...state,\n                ingredients:state.ingredients.map(\n                    ingredient=>ingredient.id===action.payload.id\n                    ?(ingredient=action.payload)\n                    :ingredient\n                )\n        }\n        default:\n            return state;\n    }\n}","import { EDIT_STRONG_DISH,SHOW_STRONGS_DISHES, \n    DELETE_STRONG_DISH,ADD_STRONG_DISH,\n    SHOW_STRONG_DISH } from \"../constants/strongDishTypes\";\nconst initialState={\n    strongsDishes:[]\n}\nexport default function strongsDishesReducer(state=initialState,action){\n    switch (action.type) {\n        case SHOW_STRONGS_DISHES:\n            return{\n                ...state,\n                strongsDishes:action.payload\n            }\n        case DELETE_STRONG_DISH:\n        return{\n            ...state,\n            strongsDishes:state.strongsDishes.filter(strongDish=>strongDish!==action.payload)\n        }\n        case ADD_STRONG_DISH:\n            return{\n                ...state,\n                strongsDishes:[...state.strongsDishes,action.payload]\n            }\n        case SHOW_STRONG_DISH:\n            return {\n                ...state,\n                strongDish:action.payload\n            }\n        case EDIT_STRONG_DISH:\n            return{\n                ...state,\n                strongsDishes:state.strongsDishes.map(\n                    strongsDish=>strongsDish.id===action.payload.id\n                    ?(strongsDish=action.payload)\n                    :strongsDish\n                )\n        }\n        default:\n            return state;\n    }\n}","import { \n    SHOW_ENTREES, DELETE_ENTREE,\n    ADD_ENTREE,\n    SHOW_ENTREE ,EDIT_ENTREE} from \"../constants/entreeTypes\";\nconst initialState={\n    entrees:[],\n    entree:null\n}\nexport default function entreesReducer(state=initialState,action){\n    switch (action.type) {\n        case SHOW_ENTREES:\n            return{\n                ...state,\n                entrees:action.payload\n            }\n        case DELETE_ENTREE:\n        return{\n            ...state,\n            entrees:state.entrees.filter(entree=>entree.id!==action.payload)\n        }\n        case ADD_ENTREE:\n            return{\n                ...state,\n                entrees:[...state.entrees,action.payload]\n            }\n        case SHOW_ENTREE:\n            return {\n                ...state,\n                entree:action.payload\n            }\n        case EDIT_ENTREE:\n            return{\n                ...state,\n                entrees:state.entrees.map(\n                    entree=>entree.id===action.payload.id\n                    ?(entree=action.payload)\n                    :entree\n                )\n        }\n        default:\n            return state;\n    }\n}","import { EDIT_DESSERT,SHOW_DESSERTS, \n    DELETE_DESSERT,ADD_DESSERT,\n    SHOW_DESSERT,UPDATE_DESSERT } from \"../constants/dessertTypes\";\nconst initialState={\n    desserts:[],\n    dessert:null\n}\nexport default function dessertsReducer(state=initialState,action){\n    switch (action.type) {\n        case SHOW_DESSERTS:\n            return{\n                ...state,\n                desserts:action.payload\n            }\n        case DELETE_DESSERT:\n        return{\n            ...state,\n            desserts:state.desserts.filter(dessert=>dessert.id!==action.payload)\n        }\n        case ADD_DESSERT:\n            return{\n                ...state,\n                desserts:[...state.desserts,action.payload]\n            }\n        case SHOW_DESSERT:\n            return {\n                ...state,\n                dessert:action.payload\n            }\n        case EDIT_DESSERT:\n            return{\n                ...state,\n                desserts:state.desserts.map(\n                    dessert=>dessert.id===action.payload.id\n                    ?(dessert=action.payload)\n                    :dessert\n                )\n            }\n        case UPDATE_DESSERT:\n            return{\n                ...state,\n                desserts:state.desserts.map(\n                    dessert=>dessert.id===action.payload.id\n                    ?(dessert=action.payload)\n                    :dessert\n                )\n            }\n        default:\n            return state;\n    }\n}","import { EDIT_DRINK,SHOW_DRINKS, \n    DELETE_DRINK,ADD_DRINK,\n    SHOW_DRINK } from \"../constants/drinkTypes\";\nconst initialState={\n    drinks:[],\n    drink:null\n}\nexport default function drinksReducer(state=initialState,action){\n    switch (action.type) {\n        case SHOW_DRINKS:\n            return{\n                ...state,\n                drinks:action.payload\n            }\n        case DELETE_DRINK:\n        return{\n            ...state,\n            drinks:state.drinks.filter(drink=>drink.id!==action.payload)\n        }\n        case ADD_DRINK:\n            return{\n                ...state,\n                drinks:[...state.drinks,action.payload]\n            }\n        case SHOW_DRINK:\n            return {\n                ...state,\n                drink:action.payload\n            }\n        case EDIT_DRINK:\n            return{\n                ...state,\n                drinks:state.drinks.map(\n                    drink=>drink.id===action.payload.id\n                    ?(drink=action.payload)\n                    :drink\n                )\n        }\n        default:\n            return state;\n    }\n}","import {GET_INVOICES,SHOW_INVOICE,SHOW_ORDER_PRODUCTS} from \"../constants/invoiceTypes\";\n\nconst initialState={\n    invoices:[]\n}\nexport default function invoicesReducer(state=initialState,action){\n    switch (action.type) {\n        case GET_INVOICES:\n            return{\n                ...state,\n                invoices:action.payload\n            }\n        case SHOW_INVOICE:\n            return{\n                ...state,\n                invoice:action.payload\n            }\n        case SHOW_ORDER_PRODUCTS:\n            return{\n                ...state,\n                orderProducts:action.payload\n            }     \n        default:\n            return state\n    }\n}","import {SET_ADD_INGREDIENT ,SET_DISH_ID,SET_DISH_INGREDIENT_ID,SET_DELETE_PRODUCT} from \"../constants/modalTypes\";\nconst initialState={\n    modals:'addIngredient',\n    idDish:'1BGD',\n    nextIdDishIngredient:0,\n    productType:\"Main Course\",\n    idToDelete:'NONE'\n}\nexport default function modalsReducer(state=initialState,action){\n    switch (action.type) {\n        case SET_ADD_INGREDIENT:\n            return{\n                ...state,\n                modals:'addIngredient'\n            }\n        case SET_DELETE_PRODUCT:\n            return{\n                ...state,\n                modals:'delete',\n                idToDelete:action.idToDelete,\n                productType:action.productType\n            }\n        case SET_DISH_ID:\n            return{\n                ...state,\n                idDish:action.idDish\n            } \n         \n        case SET_DISH_INGREDIENT_ID:\n            return{\n                ...state,\n                nextIdDishIngredient:action.nextIdDishIngredient\n            }\n        default:\n            return state;\n    }\n}","import { GET_INGREDIENTS_BY_DISH_ID ,ADD_INGREDIENT_TO_DISH,\n    DELETE_INGREDIENT_TO_DISH,UPDATE_INGREDIENT_TO_DISH,CLEAR_INGREDIENTS_BY_DISH} from \"../constants/ingredientToDishTypes\";\nconst initialState={\n    ingredientsByDish:[]\n}\nexport default function(state=initialState,action){\n    switch (action.type) {\n        case GET_INGREDIENTS_BY_DISH_ID:\n            return{\n                ...state,\n                ingredientsByDish:action.payload\n            }\n        case DELETE_INGREDIENT_TO_DISH:\n            return{\n                ...state,\n                ingredientsByDish: state.ingredientsByDish.filter(ing => ing.id_ingredient_dish !== action.payload)\n            }\n        case ADD_INGREDIENT_TO_DISH:\n            return{\n                ...state,\n                ingredientsByDish:[\n                    action.payload\n                ]\n            }\n        case CLEAR_INGREDIENTS_BY_DISH:\n            return{\n                ...state,\n                ingredientsByDish:[]\n            }\n        case UPDATE_INGREDIENT_TO_DISH:\n            return{\n                ...state,\n                ingredientsByDish:[\n                    ...state.ingredientsByDish,\n                    action.payload\n                ]\n            }\n        default:\n            return state;\n    }\n}","import { SHOW_USERS,SHOW_USER,EDIT_USER,DELETE_USER } from \"../constants/userTypes\";\nconst initialState={\n    users:[]\n}\nexport default function usersReducer(state=initialState,action){\n    switch (action.type) {\n        case SHOW_USERS:\n            return{\n                ...state,\n                users:action.payload\n            }\n        case SHOW_USER:\n            return{\n                ...state,\n                user:action.payload\n            }\n        case DELETE_USER:\n            return{\n                ...state,\n                users:state.users.filter(user=>user!==action.payload)\n            }\n        case EDIT_USER:\n            return{\n                    ...state,\n                    users:state.users.map(\n                        user=>user.id===action.payload.id\n                        ?(user=action.payload)\n                        :user\n                    )\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport ingredientsReducer from \"./ingredientsReducer\";\nimport strongsDishesReducer from \"./strongsDishesReducer\";\nimport entreesReducer from \"./entreesReducer\";\nimport dessertsReducer from \"./dessertsReducer\";\nimport drinksReducer from \"./drinksReducer\";\nimport invoicesReducer from \"./invoicesReducer\";\nimport modalsReducer from \"./modalsReducer\";\nimport ingredientByDishReducer from \"./ingredientByDishReducer\"\nimport usersReducer from \"./usersReducer\";\nexport default combineReducers({\n    strongsDishes:strongsDishesReducer,\n    entrees:entreesReducer,\n    ingredients:ingredientsReducer,\n    desserts:dessertsReducer,\n    drinks:drinksReducer,\n    invoices:invoicesReducer,\n    modals:modalsReducer,\n    ingredientsByDish:ingredientByDishReducer,\n    users:usersReducer\n});","import { createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst middleware = [thunk];\nconst initialState = {\n    strongsDishes:[],\n    entrees:[],\n    ingredients:[],\n    desserts:[],\n    drinks:[],\n    invoices:[],\n    ingredientsByDish:[],\n    users:[]\n};\nconst store = createStore(rootReducer, initialState, composeWithDevTools(\n    applyMiddleware(...middleware)\n));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n    <Provider store={store}>\n        <App /> \n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}